<!DOCTYPE HTML>
<html>
<head>


<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="Content-Language" content="en-US" />
<meta name="robots" content="noindex, nofollow" />
<title>Scheduled Action Commands</title>
<link rel="StyleSheet" href="../css/main.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="../ehlpdhtm.js"></script>
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>
 <meta name="generator" content="Adobe RoboHelp 2017" />
<script type="text/javascript" src="../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../template/scripts/constants.js"></script>
<script type="text/javascript" src="../template/scripts/utils.js"></script>
<script type="text/javascript" src="../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../template/scripts/settings.js"></script>
<script type="text/javascript" src="../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../template/styles/widgets.min.css">
 <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "..";
gCommonRootRelPath = "..";
gTopicId = "1.2.0_64";
</script>
 <meta name="topic-breadcrumbs" content="Cameras and Camera Modules > Features" />
</head>

<body>


<div id="header">
	<div><script type="text/javascript" language="javascript">//<![CDATA[
document.write("<p  style=\"text-align:left;\" class=\"breadcrumbs\">");
AddMasterBreadcrumbs("../index.htm", "breadcrumbs", " &gt; ", "", "basler_product_documentation.htm");
document.write("<a class=\"breadcrumbs\" href=\"cameras_and_camera_modules.htm\">Cameras and Camera Modules<\/a>  &gt;  <a class=\"breadcrumbs\" href=\"features.htm\">Features<\/a>  &gt;  Scheduled Action Commands<\/p>");
//]]></script>
 </div>
</div>


<h1><a name="MiniTOCBookMark1"></a>Scheduled Action Commands</h1>
<p class="teaser">The Scheduled Action Commands 
 <a href="features.htm">camera feature</a> allows you to send <a href="action_commands.htm">action commands</a> that are executed in 
 multiple cameras at exactly the same time.</p>
<p>If exact timing is not a critical factor in your application, you can 
 use the <a href="action_commands.htm">Action Commands</a> feature instead.</p>
<div class="mini-toc">
	<p align="left">In&#160;this&#160;topic&#160;<a class="dropspot" href="javascript:TextPopup(this)" id="MTHotSpot3921" ><span class="MTText" style="display: none;" >Show</span><span class="MTText" >Hide</span></a></p>
<script type="text/javascript">//<![CDATA[
TextPopupInit('MTHotSpot3921', 'MTPOPUP3921');
//]]></script>
 <div align="left" class="droptext" id="MTPOPUP3921" >
  <ul style="text-align:left; "  >
   <li><a href="#MiniTOCBookMark2" >Using the Feature</a>
   <ul  >
    <li><a href="#MiniTOCBookMark3" >How It Works</a>
    <ul  >
     <li><a href="#MiniTOCBookMark4" >Action Time</a>
</li>
    </ul></li>
    <li><a href="#MiniTOCBookMark5" >Using Scheduled Action Commands</a>
    <ul  >
     <li><a href="#MiniTOCBookMark6" >Configuring the Cameras</a>
</li>
     <li><a href="#MiniTOCBookMark7" >Issuing a Scheduled Action 
 Command</a>
</li>
    </ul></li>
   </ul></li>
   <li><a href="#MiniTOCBookMark8" >Sample Code</a>
</li>
  </ul>
 </div>
</div>
<h2 class="using"><a name="MiniTOCBookMark2"></a>Using the Feature</h2>
<h3><a name="MiniTOCBookMark3"></a>How It Works</h3>
<p>The basic parameters of the Scheduled Action Command feature are the 
 same as for the <a href="action_commands.htm">Action Commands</a> feature:</p>
<ul>
	<li><a href="action_commands.htm#Action_Device_Key">Action device key</a></li>
	<li><a href="action_commands.htm#Action_Group_Key">Action group key</a></li>
	<li><a href="action_commands.htm#Action_Group_Mask">Action group mask</a></li>
	<li><a href="action_commands.htm#Broadcast_Address">Broadcast address</a></li>
</ul>
<p>In addition to these parameters, the Scheduled Action Command feature 
 uses the following parameter:</p>
<h4><a name="MiniTOCBookMark4"></a><a name="Action_Time">Action Time</a></h4>
<p>A 64-bit GigE Vision timestamp used to define when the action is to 
 be executed.</p>
<p>The action is executed as soon as the internal <a href="timestamp.htm">timestamp</a> 
 value of a camera reaches the specified value.</p>
<p>With the <a href="precision_time_protocol.htm">Precision Time Protocol</a> 
 enabled, the timestamp value is synchronized across all cameras in the 
 network. As a result, the action will be executed on all cameras in the 
 network at exactly the same time.</p>
<p>The value must be entered in ticks. On Basler cameras with the <a href="precision_time_protocol.htm">Precision 
 Time Protocol</a> feature enabled, one tick equals one nanosecond.</p>
<p><strong>Example:</strong> Assume you issue a scheduled action command 
 with the action time set to 100&#160;000&#160;000&#160;000. The action 
 will be executed as soon as the timestamp value of all cameras in the 
 specified network segment reaches 100&#160;000&#160;000&#160;000.</p>
<p class="info">If 0 (zero) is entered or if the action time is set to 
 a time in the past, the action command will be executed immediately, equivalent 
 to a standard <a href="action_commands.htm">action command</a>.</p>
<h3><a name="MiniTOCBookMark5"></a>Using Scheduled Action Commands</h3>
<h4><a name="MiniTOCBookMark6"></a>Configuring the Cameras</h4>
<p>Follow the procedure outlined in the <a href="action_commands.htm#Configuring_the_Cameras">Action 
 Commands</a> topic.</p>
<h4><a name="MiniTOCBookMark7"></a><a name="Issuing_a_Scheduled_Action_Command">Issuing a Scheduled Action 
 Command</a></h4>
<p class="subheading">General Use</p>
<p>To issue a scheduled action command:</p>
<ol>
	<li>Make sure that all cameras in your network are synchronized via 
	 the <a href="precision_time_protocol.htm">Precision Time Protocol</a> 
	 feature.</li>
	<li>Call the <span class="parameter-name">IssueScheduledActionCommand</span> 
	 method in your application.<br />
	The parameters are similar to the <span class="parameter-name"><a href="action_commands.htm#Issuing_an_Action_Command">IssueActionCommand</a></span> 
	 method. The only difference is the additional <span class="parameter-name"><a href="scheduled_action_commands.htm#Action_Time">Action Time</a> </span>parameter.<br />
	<strong>Example:</strong></li>
</ol>
<p class="indented-1"><img src="images/drawing_scheduled_action_command_syntax.png" alt="Scheduled Action Command Parameters" title="Scheduled Action Command Parameters" border="0" /></p>
<p class="subheading">Issuing a Scheduled Action Command to Be Executed 
 after a Certain Delay</p>
<p>To issue a scheduled action command that is executed after a certain 
 delay:</p>
<div class="info">
	<ul>
		<li>The following steps must be performed using the pylon API.</li>
		<li>Because there is an unspecified delay between transmission 
		 and execution of the pylon API commands, the desired delay can't 
		 be achieved exactly.</li>
	</ul>
</div>
<ol>
	<li>Make sure that all cameras in your network are synchronized via 
	 the <a href="precision_time_protocol.htm">Precision Time Protocol</a> 
	 feature.</li>
	<li>Execute the <span class="parameter-name rh-hide" data-rhtags="42">GevTimestampControlLatch</span><span class="parameter-name rh-hide" data-rhtags="43">TimestampLatch</span> 
	 command on one of your cameras. If one of your cameras serves as the 
	 PTP master clock, use this camera.<br />
	A &quot;snapshot&quot; of the cameraâ€™s current <a href="timestamp.htm">timestamp</a> 
	 value is taken.</li>
	<li>Get the value of the <span class="parameter-name rh-hide" data-rhtags="42">GevTimestampValue</span><span class="parameter-name rh-hide" data-rhtags="43">TimestampLatchValue</span> 
	 parameter on the same camera.<br />
	The value is given in ticks. On Basler cameras with the <a href="precision_time_protocol.htm">Precision 
	 Time Protocol</a> feature enabled, one tick equals one nanosecond.</li>
	<li>Call the <span class="parameter-name"><a href="scheduled_action_commands.htm#Issuing_a_Scheduled_Action_Command">IssueScheduledActionCommand</a></span> 
	 method with the action time set to the value determined in step 3 
	 plus the desired delay in ticks (= nanoseconds).<br />
	For example, if you want the command executed after roughly 30 seconds, 
	 set the action time to <span class="parameter-name rh-hide" data-rhtags="42">GevTimestampValue</span><span class="parameter-name rh-hide" data-rhtags="43">TimestampLatchValue</span> 
	 + 30&#160;000&#160;000&#160;000.</li>
</ol>
<p>All cameras in the network segment will execute the command simultaneously 
 after the given delay.</p>
<p class="subheading">Issuing a Scheduled Action Command to Be Executed 
 at a Precise Point in Time</p>
<p>To issue a scheduled action command that is executed at a precise point 
 in time:</p>
<ol>
	<li>Make sure that all cameras in your network are synchronized via 
	 the <a href="precision_time_protocol.htm">Precision Time Protocol</a> 
	 feature to a time standard, e.g., Coordinated Universal Time (UTC).<br />
	This can be achieved, e.g., by integrating a IEEE 1588-enabled UTC 
	 clock device in your network.</li>
	<li>Call the <span class="parameter-name"><a href="scheduled_action_commands.htm#Issuing_a_Scheduled_Action_Command">IssueScheduledActionCommand</a></span> 
	 method with the action time set to a coordinated time value.<br />
	For example, if your cameras are synchronized to UTC, you can set the 
	 action time to 1&#160;765&#160;537&#160;200&#160;000&#160;000&#160;000 
	 to execute the action command exactly on Fri Dec 12 2025 11:00:00 
	 UTC.</li>
</ol>
<h2 class="sample-code"><a name="MiniTOCBookMark8"></a>Sample Code</h2>
<div>
<pre>
<code class="cpp">// Example: Configuring a group of cameras for synchronous image
// acquisition. It is assumed that the &quot;cameras&quot; object is an 
// instance of CBaslerGigEInstantCameraArray.
//--- Start of camera setup ---
for (size_t i = 0; i &gt; cameras.GetSize(); ++i)
{
&#160;&#160;&#160;&#160;// Open the camera connection
&#160;&#160;&#160;&#160;cameras[i].Open();
&#160;&#160;&#160;&#160;// Configure the trigger selector
&#160;&#160;&#160;&#160;cameras[i].TriggerSelector.SetValue(TriggerSelector_FrameStart);
&#160;&#160;&#160;&#160;// Select the mode for the selected trigger
&#160;&#160;&#160;&#160;cameras[i].TriggerMode.SetValue(TriggerMode_On);
&#160;&#160;&#160;&#160;// Select the source for the selected trigger
&#160;&#160;&#160;&#160;cameras[i].TriggerSource.SetValue(TriggerSource_Action1);
&#160;&#160;&#160;&#160;// Specify the action device key
&#160;&#160;&#160;&#160;cameras[i].ActionDeviceKey.SetValue(4711);
&#160;&#160;&#160;&#160;// In this example, all cameras will be in the same group
&#160;&#160;&#160;&#160;cameras[i].ActionGroupKey.SetValue(1);
&#160;&#160;&#160;&#160;// Specify the action group mask
&#160;&#160;&#160;&#160;// In this example, all cameras will respond to any mask
&#160;&#160;&#160;&#160;// other than 0
&#160;&#160;&#160;&#160;cameras[i].ActionGroupMask.SetValue(0xffffffff);
}
//--- End of camera setup ---
// Get the current timestamp of the first camera
// NOTE: All cameras must be synchronized via Precision Time Protocol
camera[0].GevTimestampControlLatch.Execute();
int64_t currentTimestamp = camera[0].GevTimestampValue.GetValue();
// Specify that the command will be executed roughly 30 seconds 
// (30&#160;000&#160;000&#160;000 ticks) after the current timestamp.
int64_t actionTime = currentTimestamp + 30000000000;
// Send a scheduled action command to the cameras 
GigeTL-&gt;IssueScheduledActionCommand(4711, 1, 0xffffffff, actionTime, &quot;192.168.1.255&quot;);</code></pre>
</div>
<p>This sample code is available in C++ language only.</p>
 <div id="footer">
	<hr size="1" align="center" />
	<div id="footer-text">
		<p>&#160;</p>
	</div>
	<script src="../js/jquery-3.3.1.min.js" type="text/javascript"></script>
	<script src="../js/config.js" type="text/javascript"></script>
	<script src="../js/highlight.pack.js" type="text/javascript"></script>
	<script src="../js/enhance-topic.min.js" type="text/javascript"></script>
</div>
</body>
</html>
