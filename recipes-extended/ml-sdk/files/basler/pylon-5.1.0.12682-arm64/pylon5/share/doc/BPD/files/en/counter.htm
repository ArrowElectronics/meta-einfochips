<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="Content-Language" content="en-US" />
<meta name="robots" content="noindex, nofollow" />
 <meta name="generator" content="Adobe RoboHelp 2017" />
<title>Counter</title>
<link rel="StyleSheet" href="../css/main.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="../ehlpdhtm.js"></script>
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../template/scripts/constants.js"></script>
<script type="text/javascript" src="../template/scripts/utils.js"></script>
<script type="text/javascript" src="../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../template/scripts/settings.js"></script>
<script type="text/javascript" src="../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../template/styles/widgets.min.css">
 <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "..";
gCommonRootRelPath = "..";
gTopicId = "1.2.0_22";
</script>
 <meta name="topic-breadcrumbs" content="Cameras and Camera Modules > Features" />
</head>

<body>


<div id="header">
	<div><script type="text/javascript" language="javascript">//<![CDATA[
document.write("<p  style=\"text-align:left;\" class=\"breadcrumbs\">");
AddMasterBreadcrumbs("../index.htm", "breadcrumbs", " &gt; ", "", "basler_product_documentation.htm");
document.write("<a class=\"breadcrumbs\" href=\"cameras_and_camera_modules.htm\">Cameras and Camera Modules<\/a>  &gt;  <a class=\"breadcrumbs\" href=\"features.htm\">Features<\/a>  &gt;  Counter<\/p>");
//]]></script>
 </div>
</div>


<h1><a name="MiniTOCBookMark1"></a>Counter</h1>
<p class="teaser">The Counter 
 <a href="features.htm">camera feature</a> allows you to count certain 
 camera events, e.g., the number of images acquired.</p>
<p>You can get the current value of a counter by retrieving the related 
 <a href="data_chunks.htm">data chunk</a>.</p>
<div class="mini-toc">
	<p align="left">In&#160;this&#160;topic&#160;<a class="dropspot" href="javascript:TextPopup(this)" id="MTHotSpot38397" ><span class="MTText" style="display: none;" >Show</span><span class="MTText" >Hide</span></a></p>
<script type="text/javascript">//<![CDATA[
TextPopupInit('MTHotSpot38397', 'MTPOPUP38397');
//]]></script>
 <div align="left" class="droptext" id="MTPOPUP38397" >
  <ul style="text-align:left; "  >
   <li><a href="#MiniTOCBookMark2" >Using the Feature</a>
   <ul  >
    <li><a href="#MiniTOCBookMark3" >How It Works</a>
</li>
    <li><a href="#MiniTOCBookMark4" >Getting the Value of a Counter</a>
</li>
    <li><a href="#MiniTOCBookMark5" >Resetting a Counter</a>
</li>
    <li><a href="#MiniTOCBookMark6" >Additional Parameters</a>
</li>
   </ul></li>
   <li><a href="#MiniTOCBookMark7" >Specifics</a>
</li>
   <li><a href="#MiniTOCBookMark8" >Sample Code</a>
</li>
  </ul>
 </div>
</div>
<h2 class="using"><a name="MiniTOCBookMark2"></a>Using the Feature</h2>
<h3><a name="MiniTOCBookMark3"></a>How It Works</h3>
<p>If your camera supports the Counter feature, multiple counters are available.</p>
<p>With one exception (see below), every counter has the following characteristics:</p>
<ul>
	<li>It starts at 0.</li>
	<li>It counts a specific type of event (the &quot;<a href="#Specifics">event 
	 source</a>&quot;). For example, it counts the number of images acquired. 
	 The event source is preset and can't be changed.</li>
	<li>Its current value can be determined by retrieving the <a href="#Specifics">related 
	 data chunk</a>, e.g., the Frame Counter chunk.</li>
	<li>Its maximum value is 4&#160;294&#160;967&#160;295. After reaching 
	 the maximum value, the counter is reset to 0 and then continues counting.</li>
	<li>It can be <a href="counter.htm#Resetting_a_Counter">reset</a> manually.</li>
	<li>It is reset to 0 whenever the camera is powered off and on again.</li>
</ul>
<p><strong>Exception:</strong> On <a href="#Specifics">some camera models</a>, 
 Counter 2 can be used to <a href="sequencer_(usb_cameras).htm#Using_a_Counter_to_Control_the_Sequencer">control 
 the sequencer</a>. This counter has different characteristics due to its 
 specific purpose.</p>
<h3><a name="MiniTOCBookMark4"></a>Getting the Value of a Counter</h3>
<p>To get the current value of a counter, retrieve the <a href="#Specifics">related 
 data chunk</a> using the <a href="data_chunks.htm">Data Chunks</a> feature.</p>
<h3><a name="MiniTOCBookMark5"></a><a name="Resetting_a_Counter">Resetting a Counter</a></h3>
<p>To reset a counter:</p>
<ol>
	<li>Set the <span class="parameter-name">CounterSelector</span> 
	 parameter to the desired counter, e.g., <span class="parameter-name">Counter2</span>.</li>
	<li>Set the <span class="parameter-name">CounterResetSource</span> 
	 parameter to a software source (<span class="parameter-name">Software</span>) 
	 or to a hardware source (e.g., <span class="parameter-name">Line1</span>). 
	 </li>
	<li>Depending on the source selected in step 2, do one of the following:</li>
	<ol>
		<li>If you set a software source, execute the <span class="parameter-name">CounterReset</span> 
		 command.</li>
		<li>If you set a hardware source, apply an electrical signal to 
		 one of the camera's input lines.</li>
	</ol>
</ol>
<h3><a name="MiniTOCBookMark6"></a>Additional Parameters</h3>
<ul>
	<li>The <span class="parameter-name">CounterEventSource</span> 
	 parameter allows you to get the event source of the currently selected 
	 counter, i.e., determine which type of event increases the counter.</li>
	<li>The <span class="parameter-name">CounterResetActivation</span> 
	 parameter currently serves no function. It is preset to <span class="parameter-name">RisingEdge</span>. 
	 This means that if the counter is configured for hardware reset, the 
	 counter resets when the hardware trigger signal rises.</li>
</ul>
<h2 class="specifics"><a name="MiniTOCBookMark7"></a><a name="Specifics">Specifics</a></h2>
<div>
<table class="specifics-table">
	<col />
	<col />
	<col />
	<col />
	<col />
	<col />
	<thead>
  <tr>
		<th>Camera Model</th>
		<th>Counter Name</th>
		<th>Function</th>
		<th>Event Source</th>
		<th>Related Data Chunk</th>
		<th>Can Be Reset</th>
	</tr>
 </thead>
	<tr>
		<td rowspan="2" data-rhtags="14" class="rh-hide">All ace GigE camera models</td>
		<td data-rhtags="14" class="rh-hide">Counter 1</td>
		<td data-rhtags="14" class="rh-hide">Counts number of hardware 
		 frame start trigger signals received, regardless of whether they 
		 cause image acquisitions or not</td>
		<td data-rhtags="14" class="rh-hide">Frame Trigger </td>
		<td data-rhtags="14" class="rh-hide"><a href="data_chunks.htm#Trigger_Input_Counter_Chunk">Trigger 
		 Input Counter Chunk</a></td>
		<td data-rhtags="14" class="rh-hide">Yes</td>
	</tr>
	<tr>
		<td data-rhtags="14" class="rh-hide">Counter 2</td>
		<td data-rhtags="14" class="rh-hide">Counts number of acquired 
		 images</td>
		<td data-rhtags="14" class="rh-hide">Frame Start</td>
		<td data-rhtags="14" class="rh-hide"><a href="data_chunks.htm#Frame_Counter_Chunk">Frame 
		 Counter Chunk</a></td>
		<td data-rhtags="14" class="rh-hide">Yes</td>
	</tr>
	<tr>
		<td rowspan="2" data-rhtags="30" class="rh-hide">All ace USB 3.0 camera models</td>
		<td data-rhtags="30" class="rh-hide">Counter 1</td>
		<td data-rhtags="30" class="rh-hide">Counts number of acquired 
		 images</td>
		<td data-rhtags="30" class="rh-hide">Frame Start</td>
		<td data-rhtags="30" class="rh-hide"><a href="data_chunks.htm#Counter_Value_Chunk">Counter 
		 Value Chunk</a></td>
		<td data-rhtags="30" class="rh-hide">Yes</td>
	</tr>
	<tr>
		<td data-rhtags="30" class="rh-hide">Counter 2</td>
		<td data-rhtags="30" class="rh-hide">Can be used to <a href="sequencer_(usb_cameras).htm#Using_a_Counter_to_Control_the_Sequencer" data-rhtags="30" class="rh-hide">control 
		 the sequencer</a></td>
		<td data-rhtags="30" class="rh-hide">Frame Start</td>
		<td data-rhtags="30" class="rh-hide">-</td>
		<td data-rhtags="30" class="rh-hide">No</td>
	</tr>
	<tr>
		<td data-rhtags="35" class="rh-hide">All dart BCON for LVDS camera models</td>
		<td data-rhtags="35" class="rh-hide">Counter feature not 
		 supported</td>
		<td data-rhtags="35" class="rh-hide">-</td>
		<td data-rhtags="35" class="rh-hide">-</td>
		<td data-rhtags="35" class="rh-hide">-</td>
		<td data-rhtags="35" class="rh-hide">-</td>
	</tr>
	<tr>
		<td data-rhtags="37" class="rh-hide">All dart USB 3.0 camera models</td>
		<td data-rhtags="37" class="rh-hide">Counter feature not 
		 supported</td>
		<td data-rhtags="37" class="rh-hide">-</td>
		<td data-rhtags="37" class="rh-hide">-</td>
		<td data-rhtags="37" class="rh-hide">-</td>
		<td data-rhtags="37" class="rh-hide">-</td>
	</tr>
	<tr>
		<td data-rhtags="41" class="rh-hide">All pulse USB 3.0 camera models</td>
		<td data-rhtags="41" class="rh-hide">Counter feature not 
		 supported</td>
		<td data-rhtags="41" class="rh-hide">-</td>
		<td data-rhtags="41" class="rh-hide">-</td>
		<td data-rhtags="41" class="rh-hide">-</td>
		<td data-rhtags="41" class="rh-hide">-</td>
	</tr>
</table>
</div>
<h2 class="sample-code"><a name="MiniTOCBookMark8"></a>Sample Code</h2>
<div><div class="container"><ul class="tabs"><li class="tab-link current" data-tab="tab-1">C++ (Native)</li><li class="tab-link" data-tab="tab-2">C++ (Generic)</li><li class="tab-link" data-tab="tab-3">C#</li><li class="tab-link" data-tab="tab-4">C.NET</li><li class="tab-link" data-tab="tab-5">C</li></ul><div class="tab-1 tab-content current"><pre><code class="cpp">// Reset Counter 1 via software command
camera.CounterSelector.SetValue(CounterSelector_Counter1);
camera.CounterResetSource.SetValue(CounterResetSource_Software);
camera.CounterReset.Execute();
// Get the event source of Counter 1
camera.CounterSelector.SetValue(CounterSelector_Counter1);
CounterEventSourceEnums e = camera.CounterEventSource.GetValue();</code></pre></div><div class="tab-2 tab-content"><pre><code class="cpp" generated="true">INodeMap&amp; nodemap = camera.GetNodeMap();
// Reset Counter 1 via software command
CEnumerationPtr(nodemap.GetNode("CounterSelector"))-&gt;FromString("Counter1");
CEnumerationPtr(nodemap.GetNode("CounterResetSource"))-&gt;FromString("Software");
CCommandPtr(nodemap.GetNode("CounterReset"))-&gt;Execute();
// Get the event source of Counter 1
CEnumerationPtr(nodemap.GetNode("CounterSelector"))-&gt;FromString("Counter1");
String_t e = CEnumerationPtr(nodemap.GetNode("CounterEventSource"))-&gt;ToString();</code></pre></div><div class="tab-3 tab-content"><pre><code class="csharp" generated="true">// Reset Counter 1 via software command
camera.Parameters[PLCamera.CounterSelector].SetValue(PLCamera.CounterSelector.Counter1);
camera.Parameters[PLCamera.CounterResetSource].SetValue(PLCamera.CounterResetSource.Software);
camera.Parameters[PLCamera.CounterReset].Execute();
// Get the event source of Counter 1
camera.Parameters[PLCamera.CounterSelector].SetValue(PLCamera.CounterSelector.Counter1);
string e = camera.Parameters[PLCamera.CounterEventSource].GetValue();</code></pre></div><div class="tab-4 tab-content"><pre><code class="csharp" generated="true">// Reset Counter 1 via software command
Pylon.DeviceFeatureFromString(hdev, "CounterSelector", "Counter1");
Pylon.DeviceFeatureFromString(hdev, "CounterResetSource", "Software");
Pylon.DeviceExecuteCommandFeature(hdev, "CounterReset");
// Get the event source of Counter 1
Pylon.DeviceFeatureFromString(hdev, "CounterSelector", "Counter1");
string e = Pylon.DeviceFeatureToString(hdev, "CounterEventSource");</code></pre></div><div class="tab-5 tab-content"><pre><code class="c" generated="true">/* Macro to check for errors */
#define CHECK(errc) if (GENAPI_E_OK != errc) printErrorAndExit(errc)
GENAPIC_RESULT errRes = GENAPI_E_OK;  /* Return value of pylon methods */
size_t len = 0;
char e_str[64] = {0};
/* Reset Counter 1 via software command */
errRes = PylonDeviceFeatureFromString(hdev, "CounterSelector", "Counter1");
CHECK(errRes);
errRes = PylonDeviceFeatureFromString(hdev, "CounterResetSource", "Software");
CHECK(errRes);
errRes = PylonDeviceExecuteCommandFeature(hdev, "CounterReset");
CHECK(errRes);
/* Get the event source of Counter 1 */
errRes = PylonDeviceFeatureFromString(hdev, "CounterSelector", "Counter1");
CHECK(errRes);
len = sizeof(e_str);
errRes = PylonDeviceFeatureToString(hdev, "CounterEventSource", e_str, &amp;len);
CHECK(errRes);</code></pre></div></div></div>
<p>You can also <a href="configuring_camera_parameters.htm">use the pylon 
 Viewer to easily set the parameters</a>.</p>
 <div id="footer">
	<hr size="1" align="center" />
	<div id="footer-text">
		<p>&#160;</p>
	</div>
	<script src="../js/jquery-3.3.1.min.js" type="text/javascript"></script>
	<script src="../js/config.js" type="text/javascript"></script>
	<script src="../js/highlight.pack.js" type="text/javascript"></script>
	<script src="../js/enhance-topic.min.js" type="text/javascript"></script>
</div>
</body>
</html>
