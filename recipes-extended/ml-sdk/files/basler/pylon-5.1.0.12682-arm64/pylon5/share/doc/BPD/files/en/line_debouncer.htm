<!DOCTYPE HTML>
<html>
<head>


<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta http-equiv="Content-Language" content="en-UK" />
<meta name="robots" content="noindex, nofollow" />
 <meta name="generator" content="Adobe RoboHelp 2017" />
<title>Line Debouncer</title>
<link rel="StyleSheet" href="../css/main.css" type="text/css" />
<script type="text/javascript" language="JavaScript1.2" src="../ehlpdhtm.js"></script>
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
p.WebHelpNavBar { text-align:right; }
-->
</style>

<script type="text/javascript" src="../template/scripts/rh.min.js"></script>
<script type="text/javascript" src="../template/scripts/common.min.js"></script>
<script type="text/javascript" src="../template/scripts/topic.min.js"></script>
<script type="text/javascript" src="../template/scripts/constants.js"></script>
<script type="text/javascript" src="../template/scripts/utils.js"></script>
<script type="text/javascript" src="../template/scripts/mhutils.js"></script>
<script type="text/javascript" src="../template/scripts/mhlang.js"></script>
<script type="text/javascript" src="../template/scripts/mhver.js"></script>
<script type="text/javascript" src="../template/scripts/settings.js"></script>
<script type="text/javascript" src="../template/scripts/XmlJsReader.js"></script>
<script type="text/javascript" src="../template/scripts/loadparentdata.js"></script>
<script type="text/javascript" src="../template/scripts/loadscreen.js"></script>
<script type="text/javascript" src="../template/scripts/loadprojdata.js"></script>
<script type="text/javascript" src="../template/scripts/mhtopic.js"></script>
 <link rel="stylesheet" type="text/css" href="../template/styles/widgets.min.css">
 <link rel="stylesheet" type="text/css" href="../template/styles/topic.min.css">
<script type="text/javascript" >
gRootRelPath = "..";
gCommonRootRelPath = "..";
gTopicId = "1.2.0_42";
</script>
 <meta name="topic-breadcrumbs" content="Cameras and Camera Modules > Features" />
</head>

<body>


<div id="header">
	<div><script type="text/javascript" language="javascript">//<![CDATA[
document.write("<p  style=\"text-align:left;\" class=\"breadcrumbs\">");
AddMasterBreadcrumbs("../index.htm", "breadcrumbs", " &gt; ", "", "basler_product_documentation.htm");
document.write("<a class=\"breadcrumbs\" href=\"cameras_and_camera_modules.htm\">Cameras and Camera Modules<\/a>  &gt;  <a class=\"breadcrumbs\" href=\"features.htm\">Features<\/a>  &gt;  Line Debouncer<\/p>");
//]]></script>
 </div>
</div>


<h1><a name="MiniTOCBookMark1"></a>Line Debouncer</h1>
<p class="teaser">The Line Debouncer 
 <a href="features.htm">camera feature</a> allows you to filter out invalid 
 hardware input signals. </p>
<p>Only valid signals are allowed to pass through to the camera and become 
 effective.</p>
<div class="mini-toc">
	<p align="left">In&#160;this&#160;topic&#160;<a class="dropspot" href="javascript:TextPopup(this)" id="MTHotSpot52599" ><span class="MTText" style="display: none;" >Show</span><span class="MTText" >Hide</span></a></p>
<script type="text/javascript">//<![CDATA[
TextPopupInit('MTHotSpot52599', 'MTPOPUP52599');
//]]></script>
 <div align="left" class="droptext" id="MTPOPUP52599" >
  <ul style="text-align:left; "  >
   <li><a href="#MiniTOCBookMark2" >Using the Feature</a>
   <ul  >
    <li><a href="#MiniTOCBookMark3" >Prerequisites</a>
</li>
    <li><a href="#MiniTOCBookMark4" >How It Works</a>
</li>
    <li><a href="#MiniTOCBookMark5" >Enabling the Line Debouncer</a>
</li>
    <li><a href="#MiniTOCBookMark6" >Choosing the Debouncer Value</a>
</li>
   </ul></li>
   <li><a href="#MiniTOCBookMark7" >Sample Code</a>
</li>
  </ul>
 </div>
</div>
<h2 class="using"><a name="MiniTOCBookMark2"></a>Using the Feature</h2>
<h3><a name="MiniTOCBookMark3"></a>Prerequisites</h3>
<p>The camera must be configured for <a href="triggered_image_acquisition.htm">hardware 
 triggering</a>.</p>
<h3><a name="MiniTOCBookMark4"></a>How It Works</h3>
<p>The line debouncer filters out &#160;unwanted short signals (contact 
 bounce) from the rising and falling edges of incoming hardware trigger 
 signals. To this end, the line debouncer evaluates all changes and durations 
 of logical states of hardware signals.</p>
<p>The maximum duration of this evaluation period&#160;(the &quot;line 
 debouncer time&quot;) is defined by the <span class="parameter-name rh-hide" data-rhtags="42">LineDebouncerTimeAbs</span><span class="parameter-name rh-hide" data-rhtags="43">LineDebouncerTime</span> 
 parameter. The line debouncer acts like a clock that measures the durations 
 of the signals to identify valid signals. </p>
<p>The clock starts counting whenever a hardware signal changes its logical 
 state (high to low or vice versa). If the duration of the new logical 
 state is shorter than the line debouncer time specified, the new logical 
 state is considered invalid and has no effect. If the duration of the 
 new logical state is as long as the line debouncer time or longer, the 
 new logical state is considered valid and is allowed to become effective 
 in the camera.</p>
<div class="info">
	<p>Specifying a line debouncer time introduces a delay between a valid 
	 trigger signal arriving at the camera and the moment the related change 
	 of logical state is passed on to&#160;the camera. The duration of 
	 the delay is at least equal to the value of the <span class="parameter-name rh-hide" data-rhtags="42">LineDebouncerTimeAbs</span><span class="parameter-name rh-hide" data-rhtags="43">LineDebouncerTime</span> 
	 parameter. This is because the camera waits for the time specified 
	 as the line debouncer time to determine whether the signal is valid. 
	 Similarly, the line debouncer delays the end of a valid trigger signal.</p>
</div>
<p>The figure below illustrates how the line debouncer filters out invalid 
 signals from the rising and falling edge of a hardware trigger signal. 
 Line debouncer times that actually allow a change of logical state in 
 the camera are labeled &quot;OK&quot;. Also illustrated are the delays 
 of logical states inside the camera relative to the hardware trigger signal. 
 </p>
<p><img src="images/drawing_debouncer_timing.png" alt="Effect of the Line Debouncer on an Input Signal" title="Effect of the Line Debouncer on an Input Signal" width="500" height="346" border="0" /></p>
<h3><a name="MiniTOCBookMark5"></a>Enabling the Line Debouncer</h3>
<ol>
	<li>Set the <span class="parameter-name">LineSelector</span> 
	 parameter to the desired input line.</li>
	<li>Enter a value for the <span class="parameter-name rh-hide" data-rhtags="42">LineDebouncerTimeAbs</span><span class="parameter-name rh-hide" data-rhtags="43">LineDebouncerTime</span> 
	 parameter.</li>
</ol>
<h3><a name="MiniTOCBookMark6"></a>Choosing the Debouncer Value</h3>
<p>Choosing a <span class="parameter-name rh-hide" data-rhtags="42">LineDebouncerTimeAbs</span><span class="parameter-name rh-hide" data-rhtags="43">LineDebouncerTime</span> 
 value that is too low results in accepting invalid signals and signal 
 states. Choosing a value that is too high results in rejecting valid signals 
 and signal states. Basler recommends choosing a line debouncer time that 
 is slightly longer than the longest expected duration of an invalid signal. 
 </p>
<p>There is a small risk of rejecting short valid signals but in most scenarios 
 this approach should deliver good results. Monitor your application and, 
 if necessary, adjust the value if you find that too many valid signals 
 are being rejected.</p>
<h2 class="sample-code"><a name="MiniTOCBookMark7"></a>Sample Code</h2>
<div><div class="container"><ul class="tabs"><li class="tab-link current" data-tab="tab-1">C++ (Native)</li><li class="tab-link" data-tab="tab-2">C++ (Generic)</li><li class="tab-link" data-tab="tab-3">C#</li><li class="tab-link" data-tab="tab-4">C.NET</li><li class="tab-link" data-tab="tab-5">C</li></ul><div class="tab-1 tab-content current"><pre data-rhtags="42" class="rh-hide"><code class="cpp">// Select the desired input line
camera.LineSelector.SetValue(LineSelector_Line1);
// Set the parameter value to 10 microseconds
camera.LineDebouncerTimeAbs.SetValue(10.0);</code></pre><pre data-rhtags="43" class="rh-hide"><code class="cpp">// Select the desired input line
camera.LineSelector.SetValue(LineSelector_Line1);
// Set the parameter value to 10 microseconds
camera.LineDebouncerTime.SetValue(10.0);</code></pre></div><div class="tab-2 tab-content"><pre data-rhtags="42" class="rh-hide"><code class="cpp" generated="true">INodeMap&amp; nodemap = camera.GetNodeMap();
// Select the desired input line
CEnumerationPtr(nodemap.GetNode("LineSelector"))-&gt;FromString("Line1");
// Set the parameter value to 10 microseconds
CFloatPtr(nodemap.GetNode("LineDebouncerTimeAbs"))-&gt;SetValue(10.0);</code></pre><pre data-rhtags="43" class="rh-hide"><code class="cpp" generated="true">// Select the desired input line
CEnumerationPtr(nodemap.GetNode("LineSelector"))-&gt;FromString("Line1");
// Set the parameter value to 10 microseconds
CFloatPtr(nodemap.GetNode("LineDebouncerTime"))-&gt;SetValue(10.0);</code></pre></div><div class="tab-3 tab-content"><pre data-rhtags="42" class="rh-hide"><code class="csharp" generated="true">// Select the desired input line
camera.Parameters[PLCamera.LineSelector].SetValue(PLCamera.LineSelector.Line1);
// Set the parameter value to 10 microseconds
camera.Parameters[PLCamera.LineDebouncerTimeAbs].SetValue(10.0);</code></pre><pre data-rhtags="43" class="rh-hide"><code class="csharp" generated="true">// Select the desired input line
camera.Parameters[PLCamera.LineSelector].SetValue(PLCamera.LineSelector.Line1);
// Set the parameter value to 10 microseconds
camera.Parameters[PLCamera.LineDebouncerTime].SetValue(10.0);</code></pre></div><div class="tab-4 tab-content"><pre data-rhtags="42" class="rh-hide"><code class="csharp" generated="true">// Select the desired input line
Pylon.DeviceFeatureFromString(hdev, "LineSelector", "Line1");
// Set the parameter value to 10 microseconds
Pylon.DeviceSetFloatFeature(hdev, "LineDebouncerTimeAbs", 10.0);</code></pre><pre data-rhtags="43" class="rh-hide"><code class="csharp" generated="true">// Select the desired input line
Pylon.DeviceFeatureFromString(hdev, "LineSelector", "Line1");
// Set the parameter value to 10 microseconds
Pylon.DeviceSetFloatFeature(hdev, "LineDebouncerTime", 10.0);</code></pre></div><div class="tab-5 tab-content"><pre data-rhtags="42" class="rh-hide"><code class="c" generated="true">/* Macro to check for errors */
#define CHECK(errc) if (GENAPI_E_OK != errc) printErrorAndExit(errc)
GENAPIC_RESULT errRes = GENAPI_E_OK;  /* Return value of pylon methods */
/* Select the desired input line */
errRes = PylonDeviceFeatureFromString(hdev, "LineSelector", "Line1");
CHECK(errRes);
/* Set the parameter value to 10 microseconds */
errRes = PylonDeviceSetFloatFeature(hdev, "LineDebouncerTimeAbs", 10.0);
CHECK(errRes);</code></pre><pre data-rhtags="43" class="rh-hide"><code class="c" generated="true">/* Select the desired input line */
errRes = PylonDeviceFeatureFromString(hdev, "LineSelector", "Line1");
CHECK(errRes);
/* Set the parameter value to 10 microseconds */
errRes = PylonDeviceSetFloatFeature(hdev, "LineDebouncerTime", 10.0);
CHECK(errRes);</code></pre></div></div></div>
<p>You can also <a href="configuring_camera_parameters.htm">use the pylon 
 Viewer </a>to easily set the parameters.</p>
 <div id="footer">
	<hr size="1" align="center" />
	<div id="footer-text">
		<p>&#160;</p>
	</div>
	<script src="../js/jquery-3.3.1.min.js" type="text/javascript"></script>
	<script src="../js/config.js" type="text/javascript"></script>
	<script src="../js/highlight.pack.js" type="text/javascript"></script>
	<script src="../js/enhance-topic.min.js" type="text/javascript"></script>
</div>
</body>
</html>
