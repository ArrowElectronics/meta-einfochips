From 775ac411f62ad4a60301bd2e8840825e4d5cf8f6 Mon Sep 17 00:00:00 2001
From: "darshak.patel" <darshak.patel@einfochips.com>
Date: Thu, 10 Dec 2020 18:37:30 +0530
Subject: [PATCH 15/18] IMX8 THOR96: Added support for A2B BUS AD2428w

1. Added dts node for machine driver and codec driver
2. Devloped Imx8mq based machine layer code
3. Added driver support for AD2428w master
---
 .../boot/dts/freescale/imx8mq-thor96.dts      |   18 +-
 sound/soc/codecs/Kconfig                      |    9 +
 sound/soc/codecs/Makefile                     |    4 +
 sound/soc/codecs/a2b24xx-i2c.c                |   64 +
 sound/soc/codecs/a2b24xx.c                    |  383 +++++
 sound/soc/codecs/a2b24xx.h                    |   38 +
 sound/soc/codecs/adi_a2b_i2c_commandlist.h    | 1526 +++++++++++++++++
 sound/soc/fsl/Kconfig                         |   13 +
 sound/soc/fsl/Makefile                        |    2 +
 sound/soc/fsl/imx-adau-a2b2428.c              |  214 +++
 10 files changed, 2268 insertions(+), 3 deletions(-)
 create mode 100644 sound/soc/codecs/a2b24xx-i2c.c
 create mode 100644 sound/soc/codecs/a2b24xx.c
 create mode 100644 sound/soc/codecs/a2b24xx.h
 create mode 100644 sound/soc/codecs/adi_a2b_i2c_commandlist.h
 create mode 100644 sound/soc/fsl/imx-adau-a2b2428.c

diff --git a/arch/arm64/boot/dts/freescale/imx8mq-thor96.dts b/arch/arm64/boot/dts/freescale/imx8mq-thor96.dts
index 0dbd230d19b0..b4a7e8fde268 100755
--- a/arch/arm64/boot/dts/freescale/imx8mq-thor96.dts
+++ b/arch/arm64/boot/dts/freescale/imx8mq-thor96.dts
@@ -219,6 +219,13 @@
                 audio-codec = <&adau1361>;
         };

+        sound-ad2428w {
+                compatible = "fsl,imx-ad2428w";
+                model = "ad24xx-a2b-bus";
+                audio-cpu = <&sai3>;
+                audio-codec = <&a2b24xx>;
+        };
+
	sound-hdmi-arc {
		compatible = "fsl,imx-audio-spdif";
		model = "imx-hdmi-arc";
@@ -368,12 +375,11 @@
 };

 &sai3 {
-	#sound-dai-cells = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_sai3>;
-	assigned-clocks = <&clk IMX8MQ_CLK_SAI3>;
+	assigned-clocks = <&clk IMX8MQ_CLK_SAI3> , <&clk IMX8MQ_CLK_SAI3>;
	assigned-clock-parents = <&clk IMX8MQ_AUDIO_PLL1_OUT>;
-	assigned-clock-rates = <24576000>;
+	assigned-clock-rates =  <0>, <12288000>;
	status = "okay";
 };

@@ -658,6 +664,12 @@
		status = "okay";
	};

+	a2b24xx: a2b24xx@0x68 {
+                compatible = "adi,a2b24xx";
+                reg = <0x68>;
+                status = "okay";
+	};
+
	ov5640_mipi2: ov5640_mipi@3c {
		compatible = "ovti,ov5640_mipi";
		reg = <0x3c>;
diff --git a/sound/soc/codecs/Kconfig b/sound/soc/codecs/Kconfig
index f128ffabf5e5..792dfac47d61 100644
--- a/sound/soc/codecs/Kconfig
+++ b/sound/soc/codecs/Kconfig
@@ -32,6 +32,7 @@ config SND_SOC_ALL_CODECS
	select SND_SOC_ADAV803 if I2C
	select SND_SOC_ADAU1977_SPI if SPI_MASTER
	select SND_SOC_ADAU1977_I2C if I2C
+	select SND_SOC_A2B24XX_I2C if I2C
	select SND_SOC_ADAU1701 if I2C
	select SND_SOC_ADAU7002
	select SND_SOC_ADS117X
@@ -395,6 +396,14 @@ config SND_SOC_ADAU1977_I2C
	select SND_SOC_ADAU1977
	select REGMAP_I2C

+config SND_SOC_A2B24XX
+       tristate
+
+config SND_SOC_A2B24XX_I2C
+       tristate
+       select SND_SOC_A2B24XX
+       select REGMAP_I2C
+
 config SND_SOC_ADAU7002
	tristate "Analog Devices ADAU7002 Stereo PDM-to-I2S/TDM Converter"

diff --git a/sound/soc/codecs/Makefile b/sound/soc/codecs/Makefile
index 58c2b3cec86f..009ea3cf3eb0 100644
--- a/sound/soc/codecs/Makefile
+++ b/sound/soc/codecs/Makefile
@@ -21,6 +21,8 @@ snd-soc-adau1781-spi-objs := adau1781-spi.o
 snd-soc-adau1977-objs := adau1977.o
 snd-soc-adau1977-spi-objs := adau1977-spi.o
 snd-soc-adau1977-i2c-objs := adau1977-i2c.o
+snd-soc-a2b24xx-objs := a2b24xx.o
+snd-soc-a2b24xx-i2c-objs := a2b24xx-i2c.o
 snd-soc-adau7002-objs := adau7002.o
 snd-soc-adav80x-objs := adav80x.o
 snd-soc-adav801-objs := adav801.o
@@ -308,6 +310,8 @@ obj-$(CONFIG_SND_SOC_ADAU1781_SPI)	+= snd-soc-adau1781-spi.o
 obj-$(CONFIG_SND_SOC_ADAU1977)		+= snd-soc-adau1977.o
 obj-$(CONFIG_SND_SOC_ADAU1977_SPI)	+= snd-soc-adau1977-spi.o
 obj-$(CONFIG_SND_SOC_ADAU1977_I2C)	+= snd-soc-adau1977-i2c.o
+obj-$(CONFIG_SND_SOC_A2B24XX)          += snd-soc-a2b24xx.o
+obj-$(CONFIG_SND_SOC_A2B24XX_I2C)      += snd-soc-a2b24xx-i2c.o
 obj-$(CONFIG_SND_SOC_ADAU7002)	+= snd-soc-adau7002.o
 obj-$(CONFIG_SND_SOC_ADAV80X)  += snd-soc-adav80x.o
 obj-$(CONFIG_SND_SOC_ADAV801)  += snd-soc-adav801.o
diff --git a/sound/soc/codecs/a2b24xx-i2c.c b/sound/soc/codecs/a2b24xx-i2c.c
new file mode 100644
index 000000000000..dcad9488fcb6
--- /dev/null
+++ b/sound/soc/codecs/a2b24xx-i2c.c
@@ -0,0 +1,64 @@
+/*
+ * A2B24xx driver
+ *
+ * Copyright 2019 Analog Devices Inc.
+ * ADI Automotive Software Team, Bangalore
+ *
+ * Licensed under the GPL-2.
+ */
+
+#include <linux/i2c.h>
+#include <linux/mod_devicetable.h>
+#include <linux/module.h>
+#include <linux/regmap.h>
+#include <sound/soc.h>
+#include "a2b24xx.h"
+
+
+static int a2b24xx_i2c_probe(struct i2c_client *client,
+	const struct i2c_device_id *id)
+{
+	struct regmap_config config;
+	config = a2b24xx_regmap_config;
+	config.val_bits = 8;
+	config.reg_bits = 8;
+	return a2b24xx_probe(&client->dev,
+		devm_regmap_init_i2c(client, &config),
+		id->driver_data, NULL);
+}
+
+static int a2b24xx_i2c_remove(struct i2c_client *client)
+{
+	return 0;
+}
+
+#ifdef CONFIG_OF
+static const struct of_device_id a2b24xx_dt_ids[] = {
+	{ .compatible = "adi,a2b24xx", },
+	{ }
+};
+MODULE_DEVICE_TABLE(of, a2b24xx_dt_ids);
+#endif
+
+static const struct i2c_device_id a2b24xx_i2c_ids[] = {
+	{ "a2b24xx", A2B24XX },
+	{ }
+};
+MODULE_DEVICE_TABLE(i2c, a2b24xx_i2c_ids);
+
+static struct i2c_driver a2b24xx_i2c_driver = {
+	.driver = {
+		.name = "a2b24xx",
+		.owner = THIS_MODULE,
+		.of_match_table = of_match_ptr(a2b24xx_dt_ids),
+	},
+	.probe = a2b24xx_i2c_probe,
+	.remove = a2b24xx_i2c_remove,
+	.id_table = a2b24xx_i2c_ids,
+};
+module_i2c_driver(a2b24xx_i2c_driver);
+
+MODULE_DESCRIPTION("ASoC A2B24xx driver");
+MODULE_AUTHOR("ADI Automotive Software Team, Bangalore");
+MODULE_LICENSE("GPL");
+
diff --git a/sound/soc/codecs/a2b24xx.c b/sound/soc/codecs/a2b24xx.c
new file mode 100644
index 000000000000..69f5ecb0e44a
--- /dev/null
+++ b/sound/soc/codecs/a2b24xx.c
@@ -0,0 +1,383 @@
+/*
+ * A2B24XX driver
+ *
+ * Copyright 2019 Analog Devices Inc.
+ *  Author: ADI Automotive Software Team, Bangalore
+ *
+ * Licensed under the GPL-2.
+ */
+
+#include <linux/delay.h>
+#include <linux/device.h>
+#include <linux/gpio.h>
+#include <linux/gpio/consumer.h>
+#include <linux/i2c.h>
+#include <linux/init.h>
+#include <linux/module.h>
+#include <linux/regmap.h>
+#include <linux/regulator/consumer.h>
+#include <linux/slab.h>
+#include <linux/of_gpio.h>
+
+#include <sound/core.h>
+#include <sound/initval.h>
+#include <sound/pcm.h>
+#include <sound/pcm_params.h>
+#include <sound/soc.h>
+#include <sound/tlv.h>
+
+#define A2B_SETUP_ALSA
+
+#ifdef A2B_SETUP_ALSA
+#include "adi_a2b_i2c_commandlist.h"
+#endif
+#include "a2b24xx.h"
+
+struct a2b24xx
+{
+	struct regmap *regmap;
+	unsigned int sysclk;
+	enum a2b24xx_sysclk_src sysclk_src;
+	enum a2b24xx_type type;
+
+	struct snd_pcm_hw_constraint_list constraints;
+
+	struct device *dev;
+	void (*switch_mode)(struct device *dev);
+
+	unsigned int max_master_fs;
+	bool master;
+};
+
+static const struct reg_default a2b24xx_reg_defaults[] =
+		{{0x00, 0x50} };
+
+/* An example control -  no specific functionality */
+static const DECLARE_TLV_DB_MINMAX_MUTE(a2b24xx_control, 0, 0);
+
+#define A2B24XX_CONTROL(x) \
+	SOC_SINGLE_TLV("A2B" #x "Template", \
+		2, \
+		0, 255, 1, a2b24xx_control)
+
+/* example control */
+static const struct snd_kcontrol_new a2b24xx_snd_controls[] = {A2B24XX_CONTROL(1), };
+
+static int a2b24xx_reset(struct a2b24xx *a2b24xx)
+{
+	int ret = 0;
+
+	regcache_cache_bypass(a2b24xx->regmap, true);
+    /* A2B reset */
+	return ret;
+}
+#ifdef A2B_SETUP_ALSA
+/****************************************************************************/
+/*!
+ @brief          This function calculates reg value based on width and adds
+ it to the data array
+
+ @param [in]     pDstBuf               Pointer to destination array
+ @param [in]     nAddrwidth            Data unpacking boundary(1 byte / 2 byte /4 byte )
+ @param [in]     nAddr            	  Number of words to be copied
+
+ @return          Return code
+ - 0: Success
+ - 1: Failure
+ */
+/********************************************************************************/
+static void adi_a2b_Concat_Addr_Data(unsigned char pDstBuf[], unsigned int nAddrwidth, unsigned int nAddr)
+{
+	/* Store the read values in the place holder */
+	switch (nAddrwidth)
+	{ /* Byte */
+		case 1u:
+			pDstBuf[0u] = (unsigned char)nAddr;
+			break;
+			/* 16 bit word*/
+		case 2u:
+
+			pDstBuf[0u] = (unsigned char)(nAddr >> 8u);
+			pDstBuf[1u] = (unsigned char)(nAddr & 0xFFu);
+
+			break;
+			/* 24 bit word */
+		case 3u:
+			pDstBuf[0u] = (unsigned char)((nAddr & 0xFF0000u) >> 16u);
+			pDstBuf[1u] = (unsigned char)((nAddr & 0xFF00u) >> 8u);
+			pDstBuf[2u] = (unsigned char)(nAddr & 0xFFu);
+			break;
+
+			/* 32 bit word */
+		case 4u:
+			pDstBuf[0u] = (unsigned char)(nAddr >> 24u);
+			pDstBuf[1u] = (unsigned char)((nAddr & 0xFF0000u) >> 16u);
+			pDstBuf[2u] = (unsigned char)((nAddr & 0xFF00u) >> 8u);
+			pDstBuf[3u] = (unsigned char)(nAddr & 0xFFu);
+			break;
+
+		default:
+			break;
+
+	}
+}
+
+static int adi_a2b_I2CWrite(struct device *dev, unsigned short devAddr, unsigned short count, char *bytes)
+{
+	struct i2c_client *client = to_i2c_client(dev);
+	client->addr = devAddr;
+	return (i2c_master_send(client, bytes, count));
+}
+
+/****************************************************************************/
+/*!
+ @brief          This function does A2B network discovery
+ and the peripheral configuration
+ @return          None
+
+ */
+/********************************************************************************/
+static void adi_a2b_NetworkSetup(struct device *dev)
+{
+	ADI_A2B_DISCOVERY_CONFIG* pOPUnit;
+	unsigned int nIndex, nIndex1;
+	unsigned int status;
+	/* Maximum number of writes */
+	static unsigned char aDataBuffer[6000];
+	static unsigned char aDataWriteReadBuf[4u];
+	unsigned int nDelayVal;
+
+	/* Loop over all the configuration */
+	for (nIndex = 0; nIndex < CONFIG_LEN; nIndex++)
+	{
+		pOPUnit = &gaA2BConfig[nIndex];
+		/* Operation code*/
+		switch (pOPUnit->eOpCode)
+		{
+			/* Write */
+			case WRITE:
+				adi_a2b_Concat_Addr_Data(&aDataBuffer[0u], pOPUnit->nAddrWidth, pOPUnit->nAddr);
+				(void)memcpy(&aDataBuffer[pOPUnit->nAddrWidth], pOPUnit->paConfigData, pOPUnit->nDataCount);
+				/* printk("Operation number \n %d", nIndex);*/
+				/* PAL Call, replace with custom implementation  */
+				adi_a2b_I2CWrite(dev, pOPUnit->nDeviceAddr, (pOPUnit->nAddrWidth + pOPUnit->nDataCount), &aDataBuffer[0u]);
+				break;
+
+				/* Read */
+			case READ:
+				(void)memset(&aDataBuffer[0u], 0u, pOPUnit->nDataCount);
+				adi_a2b_Concat_Addr_Data(&aDataWriteReadBuf[0u], pOPUnit->nAddrWidth, pOPUnit->nAddr);
+				/* Couple of milli seconds should be OK */
+				mdelay(2);
+				break;
+
+				/* Delay */
+			case DELAY:
+				nDelayVal = 0u;
+				for (nIndex1 = 0u; nIndex1 < pOPUnit->nDataCount; nIndex1++)
+				{
+					nDelayVal = pOPUnit->paConfigData[nIndex1] | nDelayVal << 8u;
+				}
+				mdelay(nDelayVal);
+				break;
+
+			default:
+				break;
+
+		}
+	}
+
+}
+#endif
+
+/* Template functions */
+static int a2b24xx_hw_params(struct snd_pcm_substream *substream, struct snd_pcm_hw_params *params, struct snd_soc_dai *dai)
+{
+	printk("%s:%d\n",__func__,__LINE__);
+	struct snd_soc_component *component = dai->component;
+	struct a2b24xx *a2b24xx = snd_soc_component_get_drvdata(component);
+
+	unsigned int rate = params_rate(params);
+	int ret;
+	ret = 0u;
+
+	/* Add custom functionality */
+
+	printk("%s:%d\n",__func__,__LINE__);
+	return ret;
+}
+
+
+/* set pll rate */
+static int a2b24xx_set_pll(struct snd_soc_dai *dai, int pll_id,
+				     int source, unsigned int freq_in, unsigned int freq_out)
+{
+	int ret =0;
+
+	printk("%s:%d\n",__func__,__LINE__);
+	return ret;
+}
+
+static int a2b24xx_set_tdm_slot(struct snd_soc_dai *dai, unsigned int tx_mask, unsigned int rx_mask, int slots, int width)
+{
+	/* Add custom functionality */
+
+	return 0;
+}
+
+static int a2b24xx_mute(struct snd_soc_dai *dai, int mute, int stream)
+{
+        struct snd_soc_component *component = dai->component;
+        struct a2b24xx *a2b24xx = snd_soc_component_get_drvdata(component);
+
+	/* Add custom functionality */
+
+	return 0;
+}
+
+static int a2b24xx_set_dai_fmt(struct snd_soc_dai *dai, unsigned int fmt)
+{
+	struct snd_soc_component *component = dai->component;
+        struct a2b24xx *a2b24xx = snd_soc_component_get_drvdata(component);
+
+	int ret = 0;
+
+	return ret;
+
+}
+
+static int a2b24xx_startup(struct snd_pcm_substream *substream, struct snd_soc_dai *dai)
+{
+
+	struct snd_soc_component *component = dai->component;
+        struct a2b24xx *a2b24xx = snd_soc_component_get_drvdata(component);
+
+	/* Add custom functionality */
+	return 0;
+}
+
+static const struct snd_soc_dai_ops a2b24xx_dai_ops ={
+	.startup = a2b24xx_startup,
+	.hw_params = a2b24xx_hw_params,
+	.mute_stream = a2b24xx_mute,
+	.set_fmt = a2b24xx_set_dai_fmt,
+	.set_tdm_slot = a2b24xx_set_tdm_slot,
+	.set_pll = a2b24xx_set_pll,
+};
+
+static struct snd_soc_dai_driver a2b24xx_dai =
+	{
+		.name = "a2b24xx-hifi",
+		.capture =
+		{
+		.stream_name = "Capture",
+		.channels_min = 1,
+		.channels_max = 32,
+		.rates = SNDRV_PCM_RATE_KNOT,
+		.formats = SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S24_LE | SNDRV_PCM_FMTBIT_S32_LE,
+		.sig_bits = 24, },
+		.playback =
+			{
+				.stream_name = "Playback",
+				.channels_min = 1,
+				.channels_max = 32,
+				.rates = SNDRV_PCM_RATE_KNOT,
+				.formats = SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S24_LE | SNDRV_PCM_FMTBIT_S32_LE, .sig_bits = 24,
+			},
+			.ops = &a2b24xx_dai_ops,
+	};
+
+/* Supported rates */
+static const unsigned int a2b24xx_rates[] =
+ {1500, 2000,2400, 3000, 8000, 12000, 24000, 48000,  };
+
+/* Check system clock */
+static bool a2b24xx_check_sysclk(unsigned int mclk, unsigned int base_freq)
+{
+	unsigned int mcs;
+
+	return true;
+}
+
+/* set system clock */
+static int a2b24xx_set_sysclk(struct snd_soc_component *comp,int clk_id, int source,unsigned int freq, int dir)
+{
+	/* No functionality */
+	printk("%s:%d\n",__func__,__LINE__);
+	return 0;
+}
+
+static int a2b24xx_component_probe(struct snd_soc_component *component)
+{
+	int ret = 0;
+
+#ifdef A2B_SETUP_ALSA
+	/* Setting up A2B network */
+	adi_a2b_NetworkSetup(component->dev);
+#endif
+
+	return ret;
+}
+
+static const struct snd_soc_component_driver a2b24xx_component_driver = {
+	.probe 			= a2b24xx_component_probe,
+	.set_sysclk             = a2b24xx_set_sysclk,
+	.idle_bias_on		= 1,
+	.use_pmdown_time	= 1,
+	.endianness		= 1,
+	.non_legacy_dai_naming	= 1,
+};
+
+/* driver probe */
+int a2b24xx_probe(struct device *dev, struct regmap *regmap, enum a2b24xx_type type, void (*switch_mode)(struct device *dev))
+{
+	struct a2b24xx *a2b24xx;
+	int ret = 0;
+
+	if (IS_ERR(regmap))
+		return PTR_ERR(regmap);
+
+	a2b24xx = devm_kzalloc(dev, sizeof(*a2b24xx), GFP_KERNEL);
+	if (a2b24xx == NULL)
+		return -ENOMEM;
+
+	a2b24xx->dev = dev;
+	a2b24xx->type = type;
+	a2b24xx->regmap = regmap;
+	a2b24xx->switch_mode = switch_mode;
+	a2b24xx->max_master_fs = 48000;
+
+	a2b24xx->constraints.list = a2b24xx_rates;
+	a2b24xx->constraints.count = ARRAY_SIZE(a2b24xx_rates);
+
+	dev_set_drvdata(dev, a2b24xx);
+
+	ret = devm_snd_soc_register_component(dev, &a2b24xx_component_driver, &a2b24xx_dai, 1);
+
+	if (ret < 0) {
+		dev_err(dev, "Failed to register CODEC: %d\n", ret);
+	}
+
+ 	return ret;
+}
+EXPORT_SYMBOL_GPL(a2b24xx_probe);
+
+static bool a2b24xx_register_volatile(struct device *dev, unsigned int reg)
+{
+	return true;
+}
+
+const struct regmap_config a2b24xx_regmap_config =
+{
+	.max_register = 255,
+	.volatile_reg = a2b24xx_register_volatile,
+	.cache_type = REGCACHE_NONE,
+	.reg_defaults = a2b24xx_reg_defaults,
+	.num_reg_defaults = ARRAY_SIZE(a2b24xx_reg_defaults),
+};
+EXPORT_SYMBOL_GPL(a2b24xx_regmap_config);
+
+MODULE_DESCRIPTION("ASoC A2B24XX driver");
+MODULE_AUTHOR("ADI Automotive Software Team, Bangalore");
+MODULE_LICENSE("GPL");
+
diff --git a/sound/soc/codecs/a2b24xx.h b/sound/soc/codecs/a2b24xx.h
new file mode 100644
index 000000000000..f67707b60387
--- /dev/null
+++ b/sound/soc/codecs/a2b24xx.h
@@ -0,0 +1,38 @@
+/*
+ * A2B24XX driver
+ *
+ * Copyright 2019 Analog Devices Inc.
+ *  Author: ADI Automotive Software Team, Bangalore
+ *
+ * Licensed under the GPL-2.
+ */
+
+#ifndef __SOUND_SOC_CODECS_A2B24XX_H__
+#define __SOUND_SOC_CODECS_A2B24XX_H__
+
+#include <linux/regmap.h>
+
+
+struct device;
+
+enum a2b24xx_type {
+	A2B24XX,
+
+};
+
+int a2b24xx_probe(struct device *dev, struct regmap *regmap,
+	enum a2b24xx_type type, void (*switch_mode)(struct device *dev));
+
+extern const struct regmap_config a2b24xx_regmap_config;
+
+enum a2b24xx_clk_id {
+	A2B24XX_SYSCLK,
+};
+
+enum a2b24xx_sysclk_src {
+	A2B24XX_SYSCLK_SRC_MCLK,
+	A2B24XX_SYSCLK_SRC_LRCLK,
+};
+
+#endif
+
diff --git a/sound/soc/codecs/adi_a2b_i2c_commandlist.h b/sound/soc/codecs/adi_a2b_i2c_commandlist.h
new file mode 100644
index 000000000000..79905eedb013
--- /dev/null
+++ b/sound/soc/codecs/adi_a2b_i2c_commandlist.h
@@ -0,0 +1,1526 @@
+/*******************************************************************************
+* A2B24xx I2C Commandlist
+*
+* Copyright 2019 Analog Devices Inc.
+*
+* ADI Automotive Software Team, Bangalore
+*
+* Licensed under GPL-2
+*****************************************************************************/
+
+/*! \addtogroup ADI_A2B_DISCOVERY_CONFIG ADI_A2B_DISCOVERY_CONFIG
+* @{
+*/
+#ifndef _ADI_A2B_I2C_LIST_H_
+#define _ADI_A2B_I2C_LIST_H_
+
+/*! \struct ADI_A2B_DISCOVERY_CONFIG
+A2B discovery config unit structure
+*/
+typedef struct
+ {
+/*!  Device address */
+	unsigned char nDeviceAddr;
+
+/*!  Operation code */
+	unsigned char eOpCode;
+
+/*! Reg Sub address width (in bytes) */
+	unsigned char nAddrWidth;
+
+/*! Reg Sub address */
+	unsigned int nAddr;
+
+/*! Reg data width (in bytes) */
+	unsigned char nDataWidth;
+
+/*! Reg data count (in bytes) */
+	unsigned short nDataCount;
+
+/*! Config Data */
+	unsigned char* paConfigData;
+
+
+} ADI_A2B_DISCOVERY_CONFIG;
+
+#define WRITE   ((unsigned char) 0x00u)
+#define READ    ((unsigned char) 0x01u)
+#define DELAY   ((unsigned char) 0x02u)
+#define INVALID ((unsigned char) 0xffu)
+
+#define CONFIG_LEN (207)
+
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_CONTROL_Data0[1] =
+{
+	0x84u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_A2BDelay_Data1[1] =
+{
+	0x19u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_INTTYPE_Data2[1] =
+{
+	0x19u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_INTMSK0_Data3[1] =
+{
+	0x77u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_INTMSK1_Data4[1] =
+{
+	0x7Eu
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_INTMSK2_Data5[1] =
+{
+	0x0Fu
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_RESPCYCS_Data6[1] =
+{
+	0x7Fu
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_CONTROL_Data7[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_I2SGCFG_Data8[1] =
+{
+	0x42u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_SWCTL_Data9[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_DISCVRY_Data10[1] =
+{
+	0x7Fu
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_A2BDelay_Data11[1] =
+{
+	0x32u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_INTPND2_Data12[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_INTPND2_Data13[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data14[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_VENDOR_Data0[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_PRODUCT_Data1[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_VERSION_Data2[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_SWCTL_Data15[1] =
+{
+	0x21u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data16[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_SWCTL_Data3[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_DISCVRY_Data17[1] =
+{
+	0x7Bu
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_A2BDelay_Data18[1] =
+{
+	0x32u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_INTPND2_Data19[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_INTPND2_Data20[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data21[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_VENDOR_Data0[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_PRODUCT_Data1[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_VERSION_Data2[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data22[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_SWCTL_Data4[1] =
+{
+	0x21u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data23[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_BCDNSLOTS_Data3[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_LDNSLOTS_Data4[1] =
+{
+	0x02u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_LUPSLOTS_Data5[1] =
+{
+	0x02u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_I2CCFG_Data6[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_SYNCOFFSET_Data7[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_I2SGCFG_Data8[1] =
+{
+	0xE0u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_I2SCFG_Data9[1] =
+{
+	0x91u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_I2SRATE_Data10[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_PDMCTL_Data11[1] =
+{
+	0x18u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_ERRMGMT_Data12[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIODAT_Data13[1] =
+{
+	0x10u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIOOEN_Data14[1] =
+{
+	0x10u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIOIEN_Data15[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_PINTEN_Data16[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_PINTINV_Data17[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_PINCFG_Data18[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_TESTMODE_Data19[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_CLK1CFG_Data20[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_CLK2CFG_Data21[1] =
+{
+	0xC1u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_UPMASK0_Data22[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_UPMASK1_Data23[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_UPMASK2_Data24[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_UPMASK3_Data25[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_UPOFFSET_Data26[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_DNMASK0_Data27[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_DNMASK1_Data28[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_DNMASK2_Data29[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_DNMASK3_Data30[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_DNOFFSET_Data31[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIOD0MSK_Data32[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIOD1MSK_Data33[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIOD2MSK_Data34[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIOD3MSK_Data35[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIOD4MSK_Data36[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIOD5MSK_Data37[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIOD6MSK_Data38[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIOD7MSK_Data39[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIODINV_Data40[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_GPIODEN_Data41[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_MBOX0CTL_Data42[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_MBOX1CTL_Data43[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_SUSCFG_Data44[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_I2SRRSOFFS_Data45[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_I2SRRCTL_Data46[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_INTMSK0_Data47[1] =
+{
+	0x77u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_INTMSK1_Data48[1] =
+{
+	0x7Fu
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_BECCTL_Data49[1] =
+{
+	0xEFu
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADRSet_Data24[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BSlaveNode1WBZ_CHIPSet_Data50[1] =
+{
+	0x39u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADREnable_Data25[1] =
+{
+	0x21u
+};
+
+static unsigned char gaConfig_ADAU1761_SampleRate_Data0[1] =
+{
+	0x7Fu
+};
+
+static unsigned char gaConfig_ADAU1761_DSPRun_Data1[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_ClockControl_Data2[1] =
+{
+	0x0Fu
+};
+
+static unsigned char gaConfig_ADAU1761_PLLControl_Data3[6] =
+{
+	0x00u,	0x01u,	0x00u,	0x00u,	0x20u,	0x03u
+};
+
+static unsigned char gaConfig_ADAU1761_Delay_Data4[2] =
+{
+	0x00u,	0x64u
+};
+
+static unsigned char gaConfig_ADAU1761_SerialPort_Data5[2] =
+{
+	0x10u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_ALCControl_Data6[4] =
+{
+	0x00u,	0x00u,	0x00u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_MicrophoneControl_Data7[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_RecordInput_Data8[8] =
+{
+	0x00u,	0x01u,	0x05u,	0x01u,	0x05u,	0x00u,	0x00u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_ADCControl_Data9[3] =
+{
+	0x13u,	0x00u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_PlaybackOutput_Data10[14] =
+{
+	0x21u,	0x00u,	0x41u,	0x00u,	0x01u,	0x01u,	0x01u,	0xE6u,	0xE7u,	0xE4u,
+	0xE4u,	0xE5u,	0x08u,	0x03u
+};
+
+static unsigned char gaConfig_ADAU1761_ConverterControl_Data11[2] =
+{
+	0x00u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_DACControl_Data12[3] =
+{
+	0x03u,	0x00u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_SerialPort_Data13[1] =
+{
+	0xFFu
+};
+
+static unsigned char gaConfig_ADAU1761_CommunicationPort_Data14[2] =
+{
+	0xA0u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_JackDetect_Data15[1] =
+{
+	0x08u
+};
+
+static unsigned char gaConfig_ADAU1761_DSPON_Data16[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_ADAU1761_CRCRegisters_Data17[5] =
+{
+	0x41u,	0x7Fu,	0x06u,	0x7Fu,	0x01u
+};
+
+static unsigned char gaConfig_ADAU1761_GPIORegisters_Data18[4] =
+{
+	0x00u,	0x00u,	0x00u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_NonModulo_Data19[2] =
+{
+	0x10u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_WatchdogRegisters_Data20[5] =
+{
+	0x00u,	0x04u,	0x00u,	0x00u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_SamplingRate_Data21[1] =
+{
+	0x7Fu
+};
+
+static unsigned char gaConfig_ADAU1761_RoutingMatrix_Data22[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_RoutingMatrix_Data23[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_SerialData_Data24[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_DSPSlew_Data25[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_SerialPort_Data26[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_ClockEnable_Data27[2] =
+{
+	0x7Fu,	0x03u
+};
+
+static unsigned char gaConfig_ADAU1761_ProgramData_Data28[1730] =
+{
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0xFEu,	0xE0u,	0x00u,	0x00u,	0x00u,
+	0xFFu,	0x34u,	0x00u,	0x00u,	0x00u,	0xFFu,	0x2Cu,	0x00u,	0x00u,	0x00u,
+	0xFFu,	0x54u,	0x00u,	0x00u,	0x00u,	0xFFu,	0x5Cu,	0x00u,	0x00u,	0x00u,
+	0xFFu,	0xF5u,	0x08u,	0x20u,	0x00u,	0xFFu,	0x38u,	0x00u,	0x00u,	0x00u,
+	0xFFu,	0x80u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0xFEu,	0xE8u,	0x0Cu,	0x00u,	0x00u,
+	0xFEu,	0x30u,	0x00u,	0xE2u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0xFFu,	0xE8u,	0x07u,	0x20u,	0x08u,
+	0x00u,	0x00u,	0x06u,	0xA0u,	0x00u,	0xFFu,	0xE0u,	0x00u,	0xC0u,	0x00u,
+	0xFFu,	0x80u,	0x07u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0xFFu,	0x00u,	0x00u,	0x00u,	0x00u,	0xFEu,	0xC0u,	0x22u,	0x00u,	0x27u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0xFEu,	0xE8u,	0x1Eu,	0x00u,	0x00u,
+	0xFFu,	0xE8u,	0x01u,	0x20u,	0x00u,	0xFFu,	0xD8u,	0x01u,	0x03u,	0x00u,
+	0x00u,	0x07u,	0xC6u,	0x00u,	0x00u,	0xFFu,	0x08u,	0x00u,	0x00u,	0x00u,
+	0xFFu,	0xF4u,	0x00u,	0x20u,	0x00u,	0xFFu,	0xD8u,	0x07u,	0x02u,	0x00u,
+	0xFDu,	0xA5u,	0x08u,	0x20u,	0x00u,	0x00u,	0x00u,	0x00u,	0xE2u,	0x00u,
+	0xFDu,	0xADu,	0x08u,	0x20u,	0x00u,	0x00u,	0x08u,	0x00u,	0xE2u,	0x00u,
+	0xFDu,	0x25u,	0x08u,	0x20u,	0x00u,	0x00u,	0x10u,	0x00u,	0xE2u,	0x00u,
+	0xFDu,	0x2Du,	0x08u,	0x20u,	0x00u,	0x00u,	0x18u,	0x00u,	0xE2u,	0x00u,
+	0xFFu,	0xE8u,	0x08u,	0x20u,	0x00u,	0x00u,	0x20u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0x45u,	0x1Fu,	0x20u,	0x00u,	0x00u,	0x35u,	0x08u,	0x22u,	0x00u,
+	0x00u,	0x00u,	0x0Au,	0xA0u,	0x00u,	0xFFu,	0xE5u,	0x18u,	0x22u,	0x00u,
+	0x00u,	0x00u,	0x09u,	0xA0u,	0x00u,	0x00u,	0x38u,	0x00u,	0xEAu,	0x00u,
+	0x00u,	0x48u,	0x00u,	0xF2u,	0x00u,	0x00u,	0x38u,	0x00u,	0xC0u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0xFFu,	0xECu,	0x01u,	0x21u,	0x00u,	0x00u,	0x04u,	0x00u,	0xA1u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0xFFu,	0xE5u,	0x08u,	0x22u,	0x40u,
+	0x00u,	0x50u,	0x00u,	0xE2u,	0x00u,	0x00u,	0x48u,	0x00u,	0xC0u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x57u,	0xFFu,	0x20u,	0x00u,
+	0xFFu,	0xE5u,	0x08u,	0x22u,	0x00u,	0x00u,	0x58u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0x58u,	0x0Bu,	0x20u,	0x00u,	0x00u,	0x28u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0x85u,	0x1Fu,	0x20u,	0x00u,	0x00u,	0x75u,	0x08u,	0x22u,	0x00u,
+	0x00u,	0x00u,	0x0Du,	0xA0u,	0x00u,	0xFFu,	0xE5u,	0x18u,	0x22u,	0x00u,
+	0x00u,	0x00u,	0x0Cu,	0xA0u,	0x00u,	0x00u,	0x78u,	0x00u,	0xEAu,	0x00u,
+	0x00u,	0x88u,	0x00u,	0xF2u,	0x00u,	0x00u,	0x78u,	0x00u,	0xC0u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0xFFu,	0xECu,	0x01u,	0x21u,	0x00u,	0x00u,	0x04u,	0x00u,	0xA1u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0xFFu,	0xE5u,	0x08u,	0x22u,	0x40u,
+	0x00u,	0x50u,	0x00u,	0xE2u,	0x00u,	0x00u,	0x88u,	0x00u,	0xC0u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x57u,	0xFFu,	0x20u,	0x00u,
+	0xFFu,	0xE5u,	0x08u,	0x22u,	0x00u,	0x00u,	0x58u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0x58u,	0x0Eu,	0x20u,	0x00u,	0x00u,	0x68u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0x25u,	0x08u,	0x20u,	0x00u,	0xFFu,	0xD8u,	0x0Fu,	0x02u,	0x00u,
+	0x00u,	0x90u,	0x00u,	0xE2u,	0x00u,	0xFFu,	0xE8u,	0x10u,	0x20u,	0x00u,
+	0x00u,	0xE0u,	0x00u,	0xE2u,	0x00u,	0x00u,	0x6Du,	0x08u,	0x20u,	0x00u,
+	0x00u,	0xA8u,	0x00u,	0xE2u,	0x00u,	0x00u,	0x6Du,	0x08u,	0x20u,	0x00u,
+	0x00u,	0xC0u,	0x00u,	0xE2u,	0x00u,	0x00u,	0x05u,	0x08u,	0x20u,	0x00u,
+	0x00u,	0xB0u,	0x00u,	0xE2u,	0x00u,	0x00u,	0x0Du,	0x08u,	0x20u,	0x00u,
+	0x00u,	0xC8u,	0x00u,	0xE2u,	0x00u,	0x00u,	0x15u,	0x08u,	0x20u,	0x00u,
+	0x00u,	0xB8u,	0x00u,	0xE2u,	0x00u,	0x00u,	0x1Du,	0x08u,	0x20u,	0x00u,
+	0x00u,	0xD0u,	0x00u,	0xE2u,	0x00u,	0xFFu,	0xF5u,	0x08u,	0x20u,	0x00u,
+	0x01u,	0x38u,	0x00u,	0xE2u,	0x00u,	0x00u,	0xDDu,	0x08u,	0x20u,	0x00u,
+	0x00u,	0xE5u,	0x08u,	0x22u,	0x48u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0xFFu,	0xEDu,	0x08u,	0x20u,	0x26u,	0x01u,	0x38u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0xFDu,	0x08u,	0x20u,	0x00u,	0xFFu,	0xEDu,	0x13u,	0x22u,	0x48u,
+	0x00u,	0xDDu,	0x08u,	0x20u,	0x00u,	0x01u,	0x1Du,	0x08u,	0x20u,	0x25u,
+	0x01u,	0x20u,	0x00u,	0xE2u,	0x00u,	0x01u,	0x0Du,	0x08u,	0x20u,	0x00u,
+	0xFFu,	0xEDu,	0x13u,	0x22u,	0x48u,	0x00u,	0xDDu,	0x08u,	0x20u,	0x00u,
+	0x01u,	0x2Du,	0x08u,	0x20u,	0x25u,	0x01u,	0x30u,	0x00u,	0xE2u,	0x00u,
+	0x01u,	0x45u,	0x08u,	0x20u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x01u,	0x50u,	0x00u,	0xF0u,	0x00u,	0x01u,	0x55u,	0x08u,	0x20u,	0x00u,
+	0xFFu,	0xEDu,	0x13u,	0x22u,	0x48u,	0x01u,	0x3Du,	0x08u,	0x20u,	0x00u,
+	0xFFu,	0xF5u,	0x08u,	0x20u,	0x25u,	0x01u,	0x38u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0xDDu,	0x08u,	0x20u,	0x00u,	0x00u,	0xE0u,	0x00u,	0xE2u,	0x25u,
+	0x00u,	0xEDu,	0x08u,	0x20u,	0x00u,	0x00u,	0xFDu,	0x08u,	0x22u,	0x40u,
+	0x01u,	0x48u,	0x00u,	0xE2u,	0x00u,	0x00u,	0xFDu,	0x08u,	0x20u,	0x00u,
+	0x01u,	0x4Du,	0x14u,	0x22u,	0x00u,	0x01u,	0x00u,	0x00u,	0xE2u,	0x00u,
+	0x01u,	0x20u,	0x00u,	0xC0u,	0x00u,	0x00u,	0x07u,	0xFFu,	0xA0u,	0x00u,
+	0x01u,	0x00u,	0x00u,	0xC0u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x00u,	0xAFu,	0xFFu,	0x20u,	0x80u,	0x00u,	0x98u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0xC7u,	0xFFu,	0x40u,	0x80u,	0x00u,	0xA0u,	0x00u,	0xE4u,	0x00u,
+	0xFFu,	0xEDu,	0x08u,	0x20u,	0x00u,	0xFFu,	0xEFu,	0xFFu,	0x22u,	0x40u,
+	0x01u,	0x10u,	0x00u,	0xE2u,	0x00u,	0x01u,	0x30u,	0x00u,	0xC0u,	0x00u,
+	0x00u,	0x07u,	0xFFu,	0xA0u,	0x00u,	0x01u,	0x10u,	0x00u,	0xC0u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0xAFu,	0xFFu,	0x20u,	0x80u,
+	0x00u,	0x9Du,	0x08u,	0x22u,	0x00u,	0x00u,	0x98u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0xC7u,	0xFFu,	0x40u,	0x80u,	0x00u,	0xA5u,	0x08u,	0x44u,	0x00u,
+	0x00u,	0xA0u,	0x00u,	0xE4u,	0x00u,	0x00u,	0xEDu,	0x08u,	0x20u,	0x00u,
+	0x01u,	0x3Du,	0x08u,	0x22u,	0x40u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x00u,	0xF0u,	0x00u,	0xF0u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x01u,	0x7Du,	0x08u,	0x20u,	0x00u,	0xFFu,	0xE8u,	0x12u,	0x34u,	0x00u,
+	0x01u,	0x6Du,	0x08u,	0x22u,	0x48u,	0x01u,	0x78u,	0x11u,	0x20u,	0x40u,
+	0x01u,	0x68u,	0x11u,	0x34u,	0x40u,	0x01u,	0x78u,	0x11u,	0x20u,	0x25u,
+	0x01u,	0x68u,	0x11u,	0x34u,	0x25u,	0x01u,	0x90u,	0x00u,	0xE2u,	0x00u,
+	0x01u,	0x88u,	0x00u,	0xF2u,	0x00u,	0x01u,	0x7Du,	0x08u,	0x20u,	0x00u,
+	0x01u,	0x8Du,	0x08u,	0x22u,	0x00u,	0x01u,	0x6Du,	0x08u,	0x34u,	0x00u,
+	0x01u,	0x95u,	0x08u,	0x22u,	0x00u,	0x01u,	0x70u,	0x00u,	0xE2u,	0x00u,
+	0x01u,	0x80u,	0x00u,	0xF2u,	0x00u,	0x01u,	0x75u,	0x08u,	0x20u,	0x08u,
+	0xFFu,	0xEDu,	0x1Fu,	0x20u,	0x00u,	0x01u,	0x75u,	0x08u,	0x20u,	0x25u,
+	0x01u,	0x70u,	0x00u,	0xE2u,	0x00u,	0xFFu,	0xEDu,	0x1Fu,	0x22u,	0x40u,
+	0x01u,	0xA0u,	0x00u,	0xE2u,	0x00u,	0x01u,	0x75u,	0x08u,	0x20u,	0x00u,
+	0xFFu,	0xE8u,	0x12u,	0x22u,	0x40u,	0x01u,	0x70u,	0x11u,	0x30u,	0x48u,
+	0x01u,	0xA5u,	0x08u,	0x20u,	0x00u,	0xFFu,	0xE8u,	0x12u,	0x20u,	0x27u,
+	0x01u,	0xA0u,	0x00u,	0xE2u,	0x00u,	0x01u,	0xA0u,	0x00u,	0xC0u,	0x00u,
+	0x00u,	0x17u,	0xFFu,	0x20u,	0x00u,	0x01u,	0x58u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0x1Fu,	0xFFu,	0x20u,	0x00u,	0x01u,	0x60u,	0x00u,	0xE2u,	0x00u,
+	0xFFu,	0xE8u,	0x13u,	0x20u,	0x00u,	0x01u,	0xF0u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0x05u,	0x08u,	0x20u,	0x00u,	0x01u,	0xB8u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0x0Du,	0x08u,	0x20u,	0x00u,	0x01u,	0xD0u,	0x00u,	0xE2u,	0x00u,
+	0x01u,	0x5Du,	0x08u,	0x20u,	0x00u,	0x01u,	0xC0u,	0x00u,	0xE2u,	0x00u,
+	0x01u,	0x65u,	0x08u,	0x20u,	0x00u,	0x01u,	0xD8u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0x2Du,	0x08u,	0x20u,	0x00u,	0x01u,	0xC8u,	0x00u,	0xE2u,	0x00u,
+	0x00u,	0x2Du,	0x08u,	0x20u,	0x00u,	0x01u,	0xE0u,	0x00u,	0xE2u,	0x00u,
+	0xFFu,	0xF5u,	0x08u,	0x20u,	0x00u,	0x02u,	0x48u,	0x00u,	0xE2u,	0x00u,
+	0x01u,	0xEDu,	0x08u,	0x20u,	0x00u,	0x01u,	0xF5u,	0x08u,	0x22u,	0x48u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0xFFu,	0xEDu,	0x08u,	0x20u,	0x26u,
+	0x02u,	0x48u,	0x00u,	0xE2u,	0x00u,	0x02u,	0x0Du,	0x08u,	0x20u,	0x00u,
+	0xFFu,	0xEDu,	0x13u,	0x22u,	0x48u,	0x01u,	0xEDu,	0x08u,	0x20u,	0x00u,
+	0x02u,	0x2Du,	0x08u,	0x20u,	0x25u,	0x02u,	0x30u,	0x00u,	0xE2u,	0x00u,
+	0x02u,	0x1Du,	0x08u,	0x20u,	0x00u,	0xFFu,	0xEDu,	0x13u,	0x22u,	0x48u,
+	0x01u,	0xEDu,	0x08u,	0x20u,	0x00u,	0x02u,	0x3Du,	0x08u,	0x20u,	0x25u,
+	0x02u,	0x40u,	0x00u,	0xE2u,	0x00u,	0x02u,	0x55u,	0x08u,	0x20u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x02u,	0x60u,	0x00u,	0xF0u,	0x00u,
+	0x02u,	0x65u,	0x08u,	0x20u,	0x00u,	0xFFu,	0xEDu,	0x13u,	0x22u,	0x48u,
+	0x02u,	0x4Du,	0x08u,	0x20u,	0x00u,	0xFFu,	0xF5u,	0x08u,	0x20u,	0x25u,
+	0x02u,	0x48u,	0x00u,	0xE2u,	0x00u,	0x01u,	0xEDu,	0x08u,	0x20u,	0x00u,
+	0x01u,	0xF0u,	0x00u,	0xE2u,	0x25u,	0x01u,	0xFDu,	0x08u,	0x20u,	0x00u,
+	0x02u,	0x0Du,	0x08u,	0x22u,	0x40u,	0x02u,	0x58u,	0x00u,	0xE2u,	0x00u,
+	0x02u,	0x0Du,	0x08u,	0x20u,	0x00u,	0x02u,	0x5Du,	0x14u,	0x22u,	0x00u,
+	0x02u,	0x10u,	0x00u,	0xE2u,	0x00u,	0x02u,	0x30u,	0x00u,	0xC0u,	0x00u,
+	0x00u,	0x07u,	0xFFu,	0xA0u,	0x00u,	0x02u,	0x10u,	0x00u,	0xC0u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x01u,	0xBFu,	0xFFu,	0x20u,	0x80u,
+	0x01u,	0xA8u,	0x00u,	0xE2u,	0x00u,	0x01u,	0xD7u,	0xFFu,	0x40u,	0x80u,
+	0x01u,	0xB0u,	0x00u,	0xE4u,	0x00u,	0xFFu,	0xEDu,	0x08u,	0x20u,	0x00u,
+	0xFFu,	0xEFu,	0xFFu,	0x22u,	0x40u,	0x02u,	0x20u,	0x00u,	0xE2u,	0x00u,
+	0x02u,	0x40u,	0x00u,	0xC0u,	0x00u,	0x00u,	0x07u,	0xFFu,	0xA0u,	0x00u,
+	0x02u,	0x20u,	0x00u,	0xC0u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x01u,	0xBFu,	0xFFu,	0x20u,	0x80u,	0x01u,	0xADu,	0x08u,	0x22u,	0x00u,
+	0x01u,	0xA8u,	0x00u,	0xE2u,	0x00u,	0x01u,	0xD7u,	0xFFu,	0x40u,	0x80u,
+	0x01u,	0xB5u,	0x08u,	0x44u,	0x00u,	0x01u,	0xB0u,	0x00u,	0xE4u,	0x00u,
+	0x01u,	0xFDu,	0x08u,	0x20u,	0x00u,	0x02u,	0x4Du,	0x08u,	0x22u,	0x40u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x02u,	0x00u,	0x00u,	0xF0u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x02u,	0x8Du,	0x08u,	0x20u,	0x00u,
+	0xFFu,	0xE8u,	0x15u,	0x34u,	0x00u,	0x02u,	0x7Du,	0x08u,	0x22u,	0x48u,
+	0x02u,	0x88u,	0x14u,	0x20u,	0x40u,	0x02u,	0x78u,	0x14u,	0x34u,	0x40u,
+	0x02u,	0x88u,	0x14u,	0x20u,	0x25u,	0x02u,	0x78u,	0x14u,	0x34u,	0x25u,
+	0x02u,	0xA0u,	0x00u,	0xE2u,	0x00u,	0x02u,	0x98u,	0x00u,	0xF2u,	0x00u,
+	0x02u,	0x8Du,	0x08u,	0x20u,	0x00u,	0x02u,	0x9Du,	0x08u,	0x22u,	0x00u,
+	0x02u,	0x7Du,	0x08u,	0x34u,	0x00u,	0x02u,	0xA5u,	0x08u,	0x22u,	0x00u,
+	0x02u,	0x80u,	0x00u,	0xE2u,	0x00u,	0x02u,	0x90u,	0x00u,	0xF2u,	0x00u,
+	0x02u,	0x85u,	0x08u,	0x20u,	0x08u,	0xFFu,	0xEDu,	0x1Fu,	0x20u,	0x00u,
+	0x02u,	0x85u,	0x08u,	0x20u,	0x25u,	0x02u,	0x80u,	0x00u,	0xE2u,	0x00u,
+	0xFFu,	0xEDu,	0x1Fu,	0x22u,	0x40u,	0x02u,	0xB0u,	0x00u,	0xE2u,	0x00u,
+	0x02u,	0x85u,	0x08u,	0x20u,	0x00u,	0xFFu,	0xE8u,	0x15u,	0x22u,	0x40u,
+	0x02u,	0x80u,	0x14u,	0x30u,	0x48u,	0x02u,	0xB5u,	0x08u,	0x20u,	0x00u,
+	0xFFu,	0xE8u,	0x15u,	0x20u,	0x27u,	0x02u,	0xB0u,	0x00u,	0xE2u,	0x00u,
+	0x02u,	0xB0u,	0x00u,	0xC0u,	0x00u,	0x00u,	0x9Fu,	0xFFu,	0x20u,	0x00u,
+	0x02u,	0x68u,	0x00u,	0xE2u,	0x00u,	0x00u,	0xA7u,	0xFFu,	0x20u,	0x00u,
+	0x02u,	0x70u,	0x00u,	0xE2u,	0x00u,	0x02u,	0xDDu,	0x08u,	0x20u,	0x00u,
+	0xFFu,	0xE8u,	0x17u,	0x34u,	0x00u,	0x02u,	0xCDu,	0x08u,	0x22u,	0x48u,
+	0x02u,	0xD8u,	0x16u,	0x20u,	0x40u,	0x02u,	0xC8u,	0x16u,	0x34u,	0x40u,
+	0x02u,	0xD8u,	0x16u,	0x20u,	0x25u,	0x02u,	0xC8u,	0x16u,	0x34u,	0x25u,
+	0x02u,	0xF0u,	0x00u,	0xE2u,	0x00u,	0x02u,	0xE8u,	0x00u,	0xF2u,	0x00u,
+	0x02u,	0xDDu,	0x08u,	0x20u,	0x00u,	0x02u,	0xEDu,	0x08u,	0x22u,	0x00u,
+	0x02u,	0xCDu,	0x08u,	0x34u,	0x00u,	0x02u,	0xF5u,	0x08u,	0x22u,	0x00u,
+	0x02u,	0xD0u,	0x00u,	0xE2u,	0x00u,	0x02u,	0xE0u,	0x00u,	0xF2u,	0x00u,
+	0x02u,	0xD5u,	0x08u,	0x20u,	0x08u,	0xFFu,	0xEDu,	0x1Fu,	0x20u,	0x00u,
+	0x02u,	0xD5u,	0x08u,	0x20u,	0x25u,	0x02u,	0xD0u,	0x00u,	0xE2u,	0x00u,
+	0xFFu,	0xEDu,	0x1Fu,	0x22u,	0x40u,	0x03u,	0x00u,	0x00u,	0xE2u,	0x00u,
+	0x02u,	0xD5u,	0x08u,	0x20u,	0x00u,	0xFFu,	0xE8u,	0x17u,	0x22u,	0x40u,
+	0x02u,	0xD0u,	0x16u,	0x30u,	0x48u,	0x03u,	0x05u,	0x08u,	0x20u,	0x00u,
+	0xFFu,	0xE8u,	0x17u,	0x20u,	0x27u,	0x03u,	0x00u,	0x00u,	0xE2u,	0x00u,
+	0x03u,	0x00u,	0x00u,	0xC0u,	0x00u,	0x01u,	0xAFu,	0xFFu,	0x20u,	0x00u,
+	0x02u,	0xB8u,	0x00u,	0xE2u,	0x00u,	0x01u,	0xB7u,	0xFFu,	0x20u,	0x00u,
+	0x02u,	0xC0u,	0x00u,	0xE2u,	0x00u,	0x02u,	0x6Du,	0x08u,	0x20u,	0x00u,
+	0xFDu,	0x60u,	0x00u,	0xE2u,	0x00u,	0x02u,	0x75u,	0x08u,	0x20u,	0x00u,
+	0xFDu,	0x68u,	0x00u,	0xE2u,	0x00u,	0x02u,	0xC5u,	0x08u,	0x20u,	0x00u,
+	0xFDu,	0xB8u,	0x00u,	0xE2u,	0x00u,	0x02u,	0xBDu,	0x08u,	0x20u,	0x00u,
+	0xFDu,	0xB0u,	0x00u,	0xE2u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0xFEu,	0x30u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0xFEu,	0xC0u,	0x0Fu,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u
+
+};
+
+static unsigned char gaConfig_ADAU1761_Param_Data29[96] =
+{
+	0x00u,	0x00u,	0x10u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x00u,	0x00u,	0x02u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0xFFu,
+	0x00u,	0x02u,	0x22u,	0x26u,	0x00u,	0x80u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x00u,	0xFFu,	0x00u,	0x02u,	0x22u,	0x26u,	0x00u,	0x80u,	0x00u,	0x00u,
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x01u,	0x00u,	0x00u,
+	0x10u,	0x00u,	0x00u,	0x80u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x01u,
+	0x00u,	0x00u,	0x10u,	0x00u,	0x00u,	0x80u,	0x00u,	0x00u,	0x00u,	0x00u,
+	0x10u,	0x00u,	0x00u,	0x80u,	0x00u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_PLLCrlRegister_Data30[6] =
+{
+	0x00u,	0x00u,	0x00u,	0x00u,	0x00u,	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_SampleRate_Data31[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_ADAU1761_DSPRun_Data32[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_ADAU1761_DejitterRegister_Data33[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_ADAU1761_DejitterRegister_Data34[1] =
+{
+	0x03u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADRDisable_Data26[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data27[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_BCDNSLOTS_Data5[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_LDNSLOTS_Data6[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_LUPSLOTS_Data7[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_I2CCFG_Data8[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_SYNCOFFSET_Data9[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_I2SGCFG_Data10[1] =
+{
+	0xE0u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_I2SCFG_Data11[1] =
+{
+	0x20u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_I2SRATE_Data12[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_PDMCTL_Data13[1] =
+{
+	0x18u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_ERRMGMT_Data14[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIODAT_Data15[1] =
+{
+	0x10u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIOOEN_Data16[1] =
+{
+	0x10u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIOIEN_Data17[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_PINTEN_Data18[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_PINTINV_Data19[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_PINCFG_Data20[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_TESTMODE_Data21[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_CLK1CFG_Data22[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_CLK2CFG_Data23[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_UPMASK0_Data24[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_UPMASK1_Data25[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_UPMASK2_Data26[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_UPMASK3_Data27[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_UPOFFSET_Data28[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_DNMASK0_Data29[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_DNMASK1_Data30[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_DNMASK2_Data31[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_DNMASK3_Data32[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_DNOFFSET_Data33[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIOD0MSK_Data34[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIOD1MSK_Data35[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIOD2MSK_Data36[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIOD3MSK_Data37[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIOD4MSK_Data38[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIOD5MSK_Data39[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIOD6MSK_Data40[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIOD7MSK_Data41[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIODINV_Data42[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_GPIODEN_Data43[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_MBOX0CTL_Data44[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_MBOX1CTL_Data45[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_SUSCFG_Data46[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_I2SRRSOFFS_Data47[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_I2SRRCTL_Data48[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_INTMSK0_Data49[1] =
+{
+	0x77u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_INTMSK1_Data50[1] =
+{
+	0x7Fu
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_BECCTL_Data51[1] =
+{
+	0xEFu
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADRSet_Data28[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_I2CCFG_Data29[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_I2SCFG_Data30[1] =
+{
+	0x99u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_I2STXOFFSET_Data31[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_I2SRXOFFSET_Data32[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_PDMCTL_Data33[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_ERRMGMT_Data34[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIODAT_Data35[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIOOEN_Data36[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIOIEN_Data37[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_PINTEN_Data38[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_PINTINV_Data39[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_PINCFG_Data40[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_TESTMODE_Data41[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_CLK1CFG_Data42[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_CLK2CFG_Data43[1] =
+{
+	0x81u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIOD0MSK_Data44[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIOD1MSK_Data45[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIOD2MSK_Data46[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIOD3MSK_Data47[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIOD4MSK_Data48[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIOD5MSK_Data49[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIOD6MSK_Data50[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIOD7MSK_Data51[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIODINV_Data52[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_GPIODEN_Data53[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_I2SRRCTL_Data54[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_BECCTL_Data55[1] =
+{
+	0xEFu
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data56[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_DNSLOTS_Data52[1] =
+{
+	0x02u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_UPSLOTS_Data53[1] =
+{
+	0x02u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_DNSLOTS_Data57[1] =
+{
+	0x02u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_UPSLOTS_Data58[1] =
+{
+	0x02u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data59[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BSlaveNode0WCZ_SWCTL_Data54[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_SWCTL_Data60[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data61[1] =
+{
+	0x00u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_SLOTFMT_Data62[1] =
+{
+	0x44u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_DATCTL_Data63[1] =
+{
+	0x03u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_I2SRRATE_Data64[1] =
+{
+	0x01u
+};
+
+static unsigned char gaConfig_A2BMasterNode058xEZBoard_CONTROL_Data65[1] =
+{
+	0x01u
+};
+
+ADI_A2B_DISCOVERY_CONFIG gaA2BConfig[CONFIG_LEN] =
+{
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x00000012u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_CONTROL_Data0[0]},	/* CONTROL */
+	{0x68u,	DELAY,	0x01u,	0x00000000u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_A2BDelay_Data1[0]},	/* A2B_Delay */
+	{0x68u,	READ,	0x01u,	0x00000017u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_INTTYPE_Data2[0]},	/* INTTYPE */
+	{0x68u,	WRITE,	0x01u,	0x0000001Bu,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_INTMSK0_Data3[0]},	/* INTMSK0 */
+	{0x68u,	WRITE,	0x01u,	0x0000001Cu,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_INTMSK1_Data4[0]},	/* INTMSK1 */
+	{0x68u,	WRITE,	0x01u,	0x0000001Du,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_INTMSK2_Data5[0]},	/* INTMSK2 */
+	{0x68u,	WRITE,	0x01u,	0x0000000Fu,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_RESPCYCS_Data6[0]},	/* RESPCYCS */
+	{0x68u,	WRITE,	0x01u,	0x00000012u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_CONTROL_Data7[0]},	/* CONTROL */
+	{0x68u,	WRITE,	0x01u,	0x00000041u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_I2SGCFG_Data8[0]},	/* I2SGCFG */
+	{0x68u,	WRITE,	0x01u,	0x00000009u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_SWCTL_Data9[0]},	/* SWCTL */
+	{0x68u,	WRITE,	0x01u,	0x00000013u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_DISCVRY_Data10[0]},	/* DISCVRY */
+	{0x68u,	DELAY,	0x01u,	0x00000000u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_A2BDelay_Data11[0]},	/* A2B_Delay */
+	{0x68u,	READ,	0x01u,	0x0000001Au,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_INTPND2_Data12[0]},	/* INTPND2 */
+	{0x68u,	WRITE,	0x01u,	0x0000001Au,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_INTPND2_Data13[0]},	/* INTPND2 */
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data14[0]},	/* NODEADR */
+
+	/*-- COMMANDS FOR DEVICE - A2B Slave Node0 WCZ --*/
+	{0x69u,	READ,	0x01u,	0x00000002u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_VENDOR_Data0[0]},	/* VENDOR */
+	{0x69u,	READ,	0x01u,	0x00000003u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_PRODUCT_Data1[0]},	/* PRODUCT */
+	{0x69u,	READ,	0x01u,	0x00000004u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_VERSION_Data2[0]},	/* VERSION */
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x00000009u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_SWCTL_Data15[0]},	/* SWCTL */
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data16[0]},	/* NODEADR */
+
+	/*-- COMMANDS FOR DEVICE - A2B Slave Node0 WCZ --*/
+	{0x69u,	WRITE,	0x01u,	0x00000009u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_SWCTL_Data3[0]},	/* SWCTL */
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x00000013u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_DISCVRY_Data17[0]},	/* DISCVRY */
+	{0x68u,	DELAY,	0x01u,	0x00000000u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_A2BDelay_Data18[0]},	/* A2B_Delay */
+	{0x68u,	READ,	0x01u,	0x0000001Au,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_INTPND2_Data19[0]},	/* INTPND2 */
+	{0x68u,	WRITE,	0x01u,	0x0000001Au,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_INTPND2_Data20[0]},	/* INTPND2 */
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data21[0]},	/* NODEADR */
+
+	/*-- COMMANDS FOR DEVICE - A2B Slave Node1 WBZ  --*/
+	{0x69u,	READ,	0x01u,	0x00000002u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_VENDOR_Data0[0]},	/* VENDOR */
+	{0x69u,	READ,	0x01u,	0x00000003u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_PRODUCT_Data1[0]},	/* PRODUCT */
+	{0x69u,	READ,	0x01u,	0x00000004u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_VERSION_Data2[0]},	/* VERSION */
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data22[0]},	/* NODEADR */
+
+	/*-- COMMANDS FOR DEVICE - A2B Slave Node0 WCZ --*/
+	{0x69u,	WRITE,	0x01u,	0x00000009u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_SWCTL_Data4[0]},	/* SWCTL */
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data23[0]},	/* NODEADR */
+
+	/*-- COMMANDS FOR DEVICE - A2B Slave Node1 WBZ  --*/
+	{0x69u,	WRITE,	0x01u,	0x0000000Au,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_BCDNSLOTS_Data3[0]},	/* BCDNSLOTS */
+	{0x69u,	WRITE,	0x01u,	0x0000000Bu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_LDNSLOTS_Data4[0]},	/* LDNSLOTS */
+	{0x69u,	WRITE,	0x01u,	0x0000000Cu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_LUPSLOTS_Data5[0]},	/* LUPSLOTS */
+	{0x69u,	WRITE,	0x01u,	0x0000003Fu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_I2CCFG_Data6[0]},	/* I2CCFG */
+	{0x69u,	WRITE,	0x01u,	0x00000046u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_SYNCOFFSET_Data7[0]},	/* SYNCOFFSET */
+	{0x69u,	WRITE,	0x01u,	0x00000041u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_I2SGCFG_Data8[0]},	/* I2SGCFG */
+	{0x69u,	WRITE,	0x01u,	0x00000042u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_I2SCFG_Data9[0]},	/* I2SCFG */
+	{0x69u,	WRITE,	0x01u,	0x00000043u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_I2SRATE_Data10[0]},	/* I2SRATE */
+	{0x69u,	WRITE,	0x01u,	0x00000047u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_PDMCTL_Data11[0]},	/* PDMCTL */
+	{0x69u,	WRITE,	0x01u,	0x00000048u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_ERRMGMT_Data12[0]},	/* ERRMGMT */
+	{0x69u,	WRITE,	0x01u,	0x0000004Au,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIODAT_Data13[0]},	/* GPIODAT */
+	{0x69u,	WRITE,	0x01u,	0x0000004Du,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIOOEN_Data14[0]},	/* GPIOOEN */
+	{0x69u,	WRITE,	0x01u,	0x0000004Eu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIOIEN_Data15[0]},	/* GPIOIEN */
+	{0x69u,	WRITE,	0x01u,	0x00000050u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_PINTEN_Data16[0]},	/* PINTEN */
+	{0x69u,	WRITE,	0x01u,	0x00000051u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_PINTINV_Data17[0]},	/* PINTINV */
+	{0x69u,	WRITE,	0x01u,	0x00000052u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_PINCFG_Data18[0]},	/* PINCFG */
+	{0x69u,	WRITE,	0x01u,	0x00000020u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_TESTMODE_Data19[0]},	/* TESTMODE */
+	{0x69u,	WRITE,	0x01u,	0x00000059u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_CLK1CFG_Data20[0]},	/* CLK1CFG */
+	{0x69u,	WRITE,	0x01u,	0x0000005Au,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_CLK2CFG_Data21[0]},	/* CLK2CFG */
+	{0x69u,	WRITE,	0x01u,	0x00000060u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_UPMASK0_Data22[0]},	/* UPMASK0 */
+	{0x69u,	WRITE,	0x01u,	0x00000061u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_UPMASK1_Data23[0]},	/* UPMASK1 */
+	{0x69u,	WRITE,	0x01u,	0x00000062u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_UPMASK2_Data24[0]},	/* UPMASK2 */
+	{0x69u,	WRITE,	0x01u,	0x00000063u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_UPMASK3_Data25[0]},	/* UPMASK3 */
+	{0x69u,	WRITE,	0x01u,	0x00000064u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_UPOFFSET_Data26[0]},	/* UPOFFSET */
+	{0x69u,	WRITE,	0x01u,	0x00000065u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_DNMASK0_Data27[0]},	/* DNMASK0 */
+	{0x69u,	WRITE,	0x01u,	0x00000066u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_DNMASK1_Data28[0]},	/* DNMASK1 */
+	{0x69u,	WRITE,	0x01u,	0x00000067u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_DNMASK2_Data29[0]},	/* DNMASK2 */
+	{0x69u,	WRITE,	0x01u,	0x00000068u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_DNMASK3_Data30[0]},	/* DNMASK3 */
+	{0x69u,	WRITE,	0x01u,	0x00000069u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_DNOFFSET_Data31[0]},	/* DNOFFSET */
+	{0x69u,	WRITE,	0x01u,	0x00000081u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIOD0MSK_Data32[0]},	/* GPIOD0MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000082u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIOD1MSK_Data33[0]},	/* GPIOD1MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000083u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIOD2MSK_Data34[0]},	/* GPIOD2MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000084u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIOD3MSK_Data35[0]},	/* GPIOD3MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000085u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIOD4MSK_Data36[0]},	/* GPIOD4MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000086u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIOD5MSK_Data37[0]},	/* GPIOD5MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000087u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIOD6MSK_Data38[0]},	/* GPIOD6MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000088u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIOD7MSK_Data39[0]},	/* GPIOD7MSK */
+	{0x69u,	WRITE,	0x01u,	0x0000008Au,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIODINV_Data40[0]},	/* GPIODINV */
+	{0x69u,	WRITE,	0x01u,	0x00000080u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_GPIODEN_Data41[0]},	/* GPIODEN */
+	{0x69u,	WRITE,	0x01u,	0x00000090u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_MBOX0CTL_Data42[0]},	/* MBOX0CTL */
+	{0x69u,	WRITE,	0x01u,	0x00000096u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_MBOX1CTL_Data43[0]},	/* MBOX1CTL */
+	{0x69u,	WRITE,	0x01u,	0x0000005Cu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_SUSCFG_Data44[0]},	/* SUSCFG */
+	{0x69u,	WRITE,	0x01u,	0x00000058u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_I2SRRSOFFS_Data45[0]},	/* I2SRRSOFFS */
+	{0x69u,	WRITE,	0x01u,	0x00000057u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_I2SRRCTL_Data46[0]},	/* I2SRRCTL */
+	{0x69u,	WRITE,	0x01u,	0x0000001Bu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_INTMSK0_Data47[0]},	/* INTMSK0 */
+	{0x69u,	WRITE,	0x01u,	0x0000001Cu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_INTMSK1_Data48[0]},	/* INTMSK1 */
+	{0x69u,	WRITE,	0x01u,	0x0000001Eu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_BECCTL_Data49[0]},	/* BECCTL */
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADRSet_Data24[0]},	/* NODEADR - Set the node address */
+
+	/*-- COMMANDS FOR DEVICE - A2B Slave Node1 WBZ  --*/
+	{0x69u,	WRITE,	0x01u,	0x00000000u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode1WBZ_CHIPSet_Data50[0]},	/* CHIP - Set the chip address */
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADREnable_Data25[0]},	/* NODEADR - Enable PERI */
+
+	/*-- COMMANDS FOR DEVICE - ADAU1761 --*/
+	{0x69u,	WRITE,	0x02u,	0x000040EBu,	0x01u,	0x0001u,	&gaConfig_ADAU1761_SampleRate_Data0[0]},	/* IC 1.Sample Rate Setting */
+	{0x69u,	WRITE,	0x02u,	0x000040F6u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_DSPRun_Data1[0]},	/* IC 1.DSP Run Register */
+	{0x69u,	WRITE,	0x02u,	0x00004000u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_ClockControl_Data2[0]},	/* IC 1.Clock Control Register */
+	{0x69u,	WRITE,	0x02u,	0x00004002u,	0x01u,	0x0006u,	&gaConfig_ADAU1761_PLLControl_Data3[0]},	/* IC 1.PLL Control Register */
+	{0x69u,	DELAY,	0x02u,	0x00000000u,	0x01u,	0x0002u,	&gaConfig_ADAU1761_Delay_Data4[0]},	/* IC 1.Delay */
+	{0x69u,	WRITE,	0x02u,	0x00004015u,	0x01u,	0x0002u,	&gaConfig_ADAU1761_SerialPort_Data5[0]},	/* IC 1.Serial Port Control Registers */
+	{0x69u,	WRITE,	0x02u,	0x00004011u,	0x01u,	0x0004u,	&gaConfig_ADAU1761_ALCControl_Data6[0]},	/* IC 1.ALC Control Registers */
+	{0x69u,	WRITE,	0x02u,	0x00004008u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_MicrophoneControl_Data7[0]},	/* IC 1.Microphone Control Register */
+	{0x69u,	WRITE,	0x02u,	0x00004009u,	0x01u,	0x0008u,	&gaConfig_ADAU1761_RecordInput_Data8[0]},	/* IC 1.Record Input Signal Path Registers */
+	{0x69u,	WRITE,	0x02u,	0x00004019u,	0x01u,	0x0003u,	&gaConfig_ADAU1761_ADCControl_Data9[0]},	/* IC 1.ADC Control Registers */
+	{0x69u,	WRITE,	0x02u,	0x0000401Cu,	0x01u,	0x000Eu,	&gaConfig_ADAU1761_PlaybackOutput_Data10[0]},	/* IC 1.Playback Output Signal Path Registers */
+	{0x69u,	WRITE,	0x02u,	0x00004017u,	0x01u,	0x0002u,	&gaConfig_ADAU1761_ConverterControl_Data11[0]},	/* IC 1.Converter Control Registers */
+	{0x69u,	WRITE,	0x02u,	0x0000402Au,	0x01u,	0x0003u,	&gaConfig_ADAU1761_DACControl_Data12[0]},	/* IC 1.DAC Control Registers */
+	{0x69u,	WRITE,	0x02u,	0x0000402Du,	0x01u,	0x0001u,	&gaConfig_ADAU1761_SerialPort_Data13[0]},	/* IC 1.Serial Port Pad Control Registers */
+	{0x69u,	WRITE,	0x02u,	0x0000402Fu,	0x01u,	0x0002u,	&gaConfig_ADAU1761_CommunicationPort_Data14[0]},	/* IC 1.Communication Port Pad Control Registers */
+	{0x69u,	WRITE,	0x02u,	0x00004031u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_JackDetect_Data15[0]},	/* IC 1.Jack Detect Pad Control Register */
+	{0x69u,	WRITE,	0x02u,	0x000040F5u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_DSPON_Data16[0]},	/* IC 1.DSP ON Register */
+	{0x69u,	WRITE,	0x02u,	0x000040C0u,	0x01u,	0x0005u,	&gaConfig_ADAU1761_CRCRegisters_Data17[0]},	/* IC 1.CRC Registers */
+	{0x69u,	WRITE,	0x02u,	0x000040C6u,	0x01u,	0x0004u,	&gaConfig_ADAU1761_GPIORegisters_Data18[0]},	/* IC 1.GPIO Registers */
+	{0x69u,	WRITE,	0x02u,	0x000040E9u,	0x01u,	0x0002u,	&gaConfig_ADAU1761_NonModulo_Data19[0]},	/* IC 1.Non Modulo Registers */
+	{0x69u,	WRITE,	0x02u,	0x000040D0u,	0x01u,	0x0005u,	&gaConfig_ADAU1761_WatchdogRegisters_Data20[0]},	/* IC 1.Watchdog Registers */
+	{0x69u,	WRITE,	0x02u,	0x000040EBu,	0x01u,	0x0001u,	&gaConfig_ADAU1761_SamplingRate_Data21[0]},	/* IC 1.Sampling Rate Setting Register */
+	{0x69u,	WRITE,	0x02u,	0x000040F2u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_RoutingMatrix_Data22[0]},	/* IC 1.Routing Matrix Inputs Register */
+	{0x69u,	WRITE,	0x02u,	0x000040F3u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_RoutingMatrix_Data23[0]},	/* IC 1.Routing Matrix Outputs Register */
+	{0x69u,	WRITE,	0x02u,	0x000040F4u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_SerialData_Data24[0]},	/* IC 1.Serial Data Configuration Register */
+	{0x69u,	WRITE,	0x02u,	0x000040F7u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_DSPSlew_Data25[0]},	/* IC 1.DSP Slew Mode Register */
+	{0x69u,	WRITE,	0x02u,	0x000040F8u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_SerialPort_Data26[0]},	/* IC 1.Serial Port Sample Rate Register */
+	{0x69u,	WRITE,	0x02u,	0x000040F9u,	0x01u,	0x0002u,	&gaConfig_ADAU1761_ClockEnable_Data27[0]},	/* IC 1.Clock Enable Registers */
+	{0x69u,	WRITE,	0x02u,	0x00000800u,	0x01u,	0x06C2u,	&gaConfig_ADAU1761_ProgramData_Data28[0]},	/* Program Data */
+	{0x69u,	WRITE,	0x02u,	0x00000000u,	0x01u,	0x0060u,	&gaConfig_ADAU1761_Param_Data29[0]},	/* Param */
+	{0x69u,	READ,	0x02u,	0x00004002u,	0x01u,	0x0006u,	&gaConfig_ADAU1761_PLLCrlRegister_Data30[0]},	/* IC 1.PLLCrlRegister */
+	{0x69u,	WRITE,	0x02u,	0x000040EBu,	0x01u,	0x0001u,	&gaConfig_ADAU1761_SampleRate_Data31[0]},	/* IC 1.Sample Rate Setting */
+	{0x69u,	WRITE,	0x02u,	0x000040F6u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_DSPRun_Data32[0]},	/* IC 1.DSP Run Register */
+	{0x69u,	WRITE,	0x02u,	0x00004036u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_DejitterRegister_Data33[0]},	/* IC 1.Dejitter Register Control */
+	{0x69u,	WRITE,	0x02u,	0x00004036u,	0x01u,	0x0001u,	&gaConfig_ADAU1761_DejitterRegister_Data34[0]},	/* IC 1.Dejitter Register Control */
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADRDisable_Data26[0]},	/* NODEADR - Disable PERI */
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data27[0]},	/* NODEADR */
+
+	/*-- COMMANDS FOR DEVICE - A2B Slave Node0 WCZ --*/
+	{0x69u,	WRITE,	0x01u,	0x0000000Au,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_BCDNSLOTS_Data5[0]},	/* BCDNSLOTS */
+	{0x69u,	WRITE,	0x01u,	0x0000000Bu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_LDNSLOTS_Data6[0]},	/* LDNSLOTS */
+	{0x69u,	WRITE,	0x01u,	0x0000000Cu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_LUPSLOTS_Data7[0]},	/* LUPSLOTS */
+	{0x69u,	WRITE,	0x01u,	0x0000003Fu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_I2CCFG_Data8[0]},	/* I2CCFG */
+	{0x69u,	WRITE,	0x01u,	0x00000046u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_SYNCOFFSET_Data9[0]},	/* SYNCOFFSET */
+	{0x69u,	WRITE,	0x01u,	0x00000041u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_I2SGCFG_Data10[0]},	/* I2SGCFG */
+	{0x69u,	WRITE,	0x01u,	0x00000042u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_I2SCFG_Data11[0]},	/* I2SCFG */
+	{0x69u,	WRITE,	0x01u,	0x00000043u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_I2SRATE_Data12[0]},	/* I2SRATE */
+	{0x69u,	WRITE,	0x01u,	0x00000047u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_PDMCTL_Data13[0]},	/* PDMCTL */
+	{0x69u,	WRITE,	0x01u,	0x00000048u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_ERRMGMT_Data14[0]},	/* ERRMGMT */
+	{0x69u,	WRITE,	0x01u,	0x0000004Au,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIODAT_Data15[0]},	/* GPIODAT */
+	{0x69u,	WRITE,	0x01u,	0x0000004Du,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIOOEN_Data16[0]},	/* GPIOOEN */
+	{0x69u,	WRITE,	0x01u,	0x0000004Eu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIOIEN_Data17[0]},	/* GPIOIEN */
+	{0x69u,	WRITE,	0x01u,	0x00000050u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_PINTEN_Data18[0]},	/* PINTEN */
+	{0x69u,	WRITE,	0x01u,	0x00000051u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_PINTINV_Data19[0]},	/* PINTINV */
+	{0x69u,	WRITE,	0x01u,	0x00000052u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_PINCFG_Data20[0]},	/* PINCFG */
+	{0x69u,	WRITE,	0x01u,	0x00000020u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_TESTMODE_Data21[0]},	/* TESTMODE */
+	{0x69u,	WRITE,	0x01u,	0x00000059u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_CLK1CFG_Data22[0]},	/* CLK1CFG */
+	{0x69u,	WRITE,	0x01u,	0x0000005Au,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_CLK2CFG_Data23[0]},	/* CLK2CFG */
+	{0x69u,	WRITE,	0x01u,	0x00000060u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_UPMASK0_Data24[0]},	/* UPMASK0 */
+	{0x69u,	WRITE,	0x01u,	0x00000061u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_UPMASK1_Data25[0]},	/* UPMASK1 */
+	{0x69u,	WRITE,	0x01u,	0x00000062u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_UPMASK2_Data26[0]},	/* UPMASK2 */
+	{0x69u,	WRITE,	0x01u,	0x00000063u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_UPMASK3_Data27[0]},	/* UPMASK3 */
+	{0x69u,	WRITE,	0x01u,	0x00000064u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_UPOFFSET_Data28[0]},	/* UPOFFSET */
+	{0x69u,	WRITE,	0x01u,	0x00000065u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_DNMASK0_Data29[0]},	/* DNMASK0 */
+	{0x69u,	WRITE,	0x01u,	0x00000066u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_DNMASK1_Data30[0]},	/* DNMASK1 */
+	{0x69u,	WRITE,	0x01u,	0x00000067u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_DNMASK2_Data31[0]},	/* DNMASK2 */
+	{0x69u,	WRITE,	0x01u,	0x00000068u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_DNMASK3_Data32[0]},	/* DNMASK3 */
+	{0x69u,	WRITE,	0x01u,	0x00000069u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_DNOFFSET_Data33[0]},	/* DNOFFSET */
+	{0x69u,	WRITE,	0x01u,	0x00000081u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIOD0MSK_Data34[0]},	/* GPIOD0MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000082u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIOD1MSK_Data35[0]},	/* GPIOD1MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000083u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIOD2MSK_Data36[0]},	/* GPIOD2MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000084u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIOD3MSK_Data37[0]},	/* GPIOD3MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000085u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIOD4MSK_Data38[0]},	/* GPIOD4MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000086u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIOD5MSK_Data39[0]},	/* GPIOD5MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000087u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIOD6MSK_Data40[0]},	/* GPIOD6MSK */
+	{0x69u,	WRITE,	0x01u,	0x00000088u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIOD7MSK_Data41[0]},	/* GPIOD7MSK */
+	{0x69u,	WRITE,	0x01u,	0x0000008Au,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIODINV_Data42[0]},	/* GPIODINV */
+	{0x69u,	WRITE,	0x01u,	0x00000080u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_GPIODEN_Data43[0]},	/* GPIODEN */
+	{0x69u,	WRITE,	0x01u,	0x00000090u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_MBOX0CTL_Data44[0]},	/* MBOX0CTL */
+	{0x69u,	WRITE,	0x01u,	0x00000096u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_MBOX1CTL_Data45[0]},	/* MBOX1CTL */
+	{0x69u,	WRITE,	0x01u,	0x0000005Cu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_SUSCFG_Data46[0]},	/* SUSCFG */
+	{0x69u,	WRITE,	0x01u,	0x00000058u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_I2SRRSOFFS_Data47[0]},	/* I2SRRSOFFS */
+	{0x69u,	WRITE,	0x01u,	0x00000057u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_I2SRRCTL_Data48[0]},	/* I2SRRCTL */
+	{0x69u,	WRITE,	0x01u,	0x0000001Bu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_INTMSK0_Data49[0]},	/* INTMSK0 */
+	{0x69u,	WRITE,	0x01u,	0x0000001Cu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_INTMSK1_Data50[0]},	/* INTMSK1 */
+	{0x69u,	WRITE,	0x01u,	0x0000001Eu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_BECCTL_Data51[0]},	/* BECCTL */
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADRSet_Data28[0]},	/* NODEADR - Set the node address */
+	{0x68u,	WRITE,	0x01u,	0x0000003Fu,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_I2CCFG_Data29[0]},	/* I2CCFG */
+	{0x68u,	WRITE,	0x01u,	0x00000042u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_I2SCFG_Data30[0]},	/* I2SCFG */
+	{0x68u,	WRITE,	0x01u,	0x00000044u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_I2STXOFFSET_Data31[0]},	/* I2STXOFFSET */
+	{0x68u,	WRITE,	0x01u,	0x00000045u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_I2SRXOFFSET_Data32[0]},	/* I2SRXOFFSET */
+	{0x68u,	WRITE,	0x01u,	0x00000047u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_PDMCTL_Data33[0]},	/* PDMCTL */
+	{0x68u,	WRITE,	0x01u,	0x00000048u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_ERRMGMT_Data34[0]},	/* ERRMGMT */
+	{0x68u,	WRITE,	0x01u,	0x0000004Au,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIODAT_Data35[0]},	/* GPIODAT */
+	{0x68u,	WRITE,	0x01u,	0x0000004Du,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIOOEN_Data36[0]},	/* GPIOOEN */
+	{0x68u,	WRITE,	0x01u,	0x0000004Eu,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIOIEN_Data37[0]},	/* GPIOIEN */
+	{0x68u,	WRITE,	0x01u,	0x00000050u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_PINTEN_Data38[0]},	/* PINTEN */
+	{0x68u,	WRITE,	0x01u,	0x00000051u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_PINTINV_Data39[0]},	/* PINTINV */
+	{0x68u,	WRITE,	0x01u,	0x00000052u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_PINCFG_Data40[0]},	/* PINCFG */
+	{0x68u,	WRITE,	0x01u,	0x00000020u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_TESTMODE_Data41[0]},	/* TESTMODE */
+	{0x68u,	WRITE,	0x01u,	0x00000059u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_CLK1CFG_Data42[0]},	/* CLK1CFG */
+	{0x68u,	WRITE,	0x01u,	0x0000005Au,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_CLK2CFG_Data43[0]},	/* CLK2CFG */
+	{0x68u,	WRITE,	0x01u,	0x00000081u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIOD0MSK_Data44[0]},	/* GPIOD0MSK */
+	{0x68u,	WRITE,	0x01u,	0x00000082u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIOD1MSK_Data45[0]},	/* GPIOD1MSK */
+	{0x68u,	WRITE,	0x01u,	0x00000083u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIOD2MSK_Data46[0]},	/* GPIOD2MSK */
+	{0x68u,	WRITE,	0x01u,	0x00000084u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIOD3MSK_Data47[0]},	/* GPIOD3MSK */
+	{0x68u,	WRITE,	0x01u,	0x00000085u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIOD4MSK_Data48[0]},	/* GPIOD4MSK */
+	{0x68u,	WRITE,	0x01u,	0x00000086u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIOD5MSK_Data49[0]},	/* GPIOD5MSK */
+	{0x68u,	WRITE,	0x01u,	0x00000087u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIOD6MSK_Data50[0]},	/* GPIOD6MSK */
+	{0x68u,	WRITE,	0x01u,	0x00000088u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIOD7MSK_Data51[0]},	/* GPIOD7MSK */
+	{0x68u,	WRITE,	0x01u,	0x0000008Au,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIODINV_Data52[0]},	/* GPIODINV */
+	{0x68u,	WRITE,	0x01u,	0x00000080u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_GPIODEN_Data53[0]},	/* GPIODEN */
+	{0x68u,	WRITE,	0x01u,	0x00000057u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_I2SRRCTL_Data54[0]},	/* I2SRRCTL */
+	{0x68u,	WRITE,	0x01u,	0x0000001Eu,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_BECCTL_Data55[0]},	/* BECCTL */
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data56[0]},	/* NODEADR */
+
+	/*-- COMMANDS FOR DEVICE - A2B Slave Node0 WCZ --*/
+	{0x69u,	WRITE,	0x01u,	0x0000000Du,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_DNSLOTS_Data52[0]},	/* DNSLOTS */
+	{0x69u,	WRITE,	0x01u,	0x0000000Eu,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_UPSLOTS_Data53[0]},	/* UPSLOTS */
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x0000000Du,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_DNSLOTS_Data57[0]},	/* DNSLOTS */
+	{0x68u,	WRITE,	0x01u,	0x0000000Eu,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_UPSLOTS_Data58[0]},	/* UPSLOTS */
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data59[0]},	/* NODEADR */
+
+	/*-- COMMANDS FOR DEVICE - A2B Slave Node0 WCZ --*/
+	{0x69u,	WRITE,	0x01u,	0x00000009u,	0x01u,	0x0001u,	&gaConfig_A2BSlaveNode0WCZ_SWCTL_Data54[0]},	/* SWCTL */
+
+	/*-- COMMANDS FOR DEVICE - A2B Master Node0 58x EZ Board --*/
+	{0x68u,	WRITE,	0x01u,	0x00000009u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_SWCTL_Data60[0]},	/* SWCTL */
+	{0x68u,	WRITE,	0x01u,	0x00000001u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_NODEADR_Data61[0]},	/* NODEADR */
+	{0x68u,	WRITE,	0x01u,	0x00000010u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_SLOTFMT_Data62[0]},	/* SLOTFMT */
+	{0x68u,	WRITE,	0x01u,	0x00000011u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_DATCTL_Data63[0]},	/* DATCTL */
+	{0x68u,	WRITE,	0x01u,	0x00000056u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_I2SRRATE_Data64[0]},	/* I2SRRATE */
+	{0x68u,	WRITE,	0x01u,	0x00000012u,	0x01u,	0x0001u,	&gaConfig_A2BMasterNode058xEZBoard_CONTROL_Data65[0]},	/* CONTROL */
+};
+
+#endif /* _ADI_A2B_I2C_LIST_H_ */
+
diff --git a/sound/soc/fsl/Kconfig b/sound/soc/fsl/Kconfig
index ebe29a9cd411..f711f469710e 100644
--- a/sound/soc/fsl/Kconfig
+++ b/sound/soc/fsl/Kconfig
@@ -392,6 +392,19 @@ config SND_SOC_IMX_ADAU1361
           SoC Audio support for i.MX boards with adau1361
           Say Y if you want to add support for SoC audio on an i.MX board with
           a adau1361 codec.
+
+config SND_SOC_IMX_A2B24XX
+         tristate "SoC Audio support for i.MX boards with A2B AD2428"
+         depends on OF && I2C
+         select SND_SOC_A2B24XX_I2C
+         select SND_SOC_IMX_PCM_DMA
+         select SND_SOC_FSL_SAI
+         select SND_SOC_FSL_UTILS
+         select SND_KCTL_JACK
+         help
+          SoC Audio support for i.MX boards with A2B AD2428
+          Say Y if you want to add support for SoC audio on an i.MX board with
+          a AD2428 A2B Bus.

 config SND_SOC_IMX_SII902X
	tristate "SoC Audio support for i.MX boards with sii902x"
diff --git a/sound/soc/fsl/Makefile b/sound/soc/fsl/Makefile
index 5230c969532f..e3d3ad48c5ad 100644
--- a/sound/soc/fsl/Makefile
+++ b/sound/soc/fsl/Makefile
@@ -88,6 +88,7 @@ snd-soc-imx-wm8960-objs := imx-wm8960.o
 snd-soc-imx-wm8524-objs := imx-wm8524.o
 snd-soc-imx-wm8962-objs := imx-wm8962.o
 snd-soc-imx-adau1361-objs := imx_adau1361v1.o
+snd-soc-imx-adau-a2b2428-objs := imx-adau-a2b2428.o
 snd-soc-imx-sii902x-objs := imx-sii902x.o
 snd-soc-imx-spdif-objs := imx-spdif.o
 snd-soc-imx-mc13783-objs := imx-mc13783.o
@@ -119,6 +120,7 @@ obj-$(CONFIG_SND_SOC_IMX_WM8962) += snd-soc-imx-wm8962.o
 obj-$(CONFIG_SND_SOC_IMX_SII902X) += snd-soc-imx-sii902x.o
 obj-$(CONFIG_SND_SOC_IMX_RPMSG) += snd-soc-imx-rpmsg.o
 obj-$(CONFIG_SND_SOC_IMX_ADAU1361) += snd-soc-imx-adau1361.o
+obj-$(CONFIG_SND_SOC_IMX_A2B24XX) += snd-soc-imx-adau-a2b2428.o
 obj-$(CONFIG_SND_SOC_IMX_SPDIF) += snd-soc-imx-spdif.o
 obj-$(CONFIG_SND_SOC_IMX_MC13783) += snd-soc-imx-mc13783.o
 obj-$(CONFIG_SND_SOC_IMX_AUDMIX) += snd-soc-imx-audmix.o
diff --git a/sound/soc/fsl/imx-adau-a2b2428.c b/sound/soc/fsl/imx-adau-a2b2428.c
new file mode 100644
index 000000000000..a3e7990c3b0b
--- /dev/null
+++ b/sound/soc/fsl/imx-adau-a2b2428.c
@@ -0,0 +1,214 @@
+/*copyright (C) 2015-2019 Einfochips Ltd.
+ *
+ * The code contained herein is licensed under the GNU General Public
+ * License. You may obtain a copy of the GNU General Public License
+ * Version 2 or later at the following locations:
+ *
+ * http://www.opensource.org/licenses/gpl-license.html
+ * http://www.gnu.org/copyleft/gpl.html
+ */
+
+#include <linux/module.h>
+#include <linux/of_platform.h>
+#include <linux/of_gpio.h>
+#include <linux/slab.h>
+#include <linux/gpio.h>
+#include <linux/clk.h>
+#include <sound/soc.h>
+#include <sound/jack.h>
+#include <sound/control.h>
+#include <sound/pcm_params.h>
+#include <sound/soc-dapm.h>
+#include <linux/pinctrl/consumer.h>
+#include <linux/mfd/syscon.h>
+
+#include "../codecs/adau17x1.h"
+
+struct imx_priv {
+	struct platform_device *pdev;
+	struct snd_soc_card card;
+	struct clk *codec_clk;
+	unsigned int clk_frequency;
+};
+
+static int imx_hifi_hw_params(struct snd_pcm_substream *substream,
+				     struct snd_pcm_hw_params *params)
+{
+	struct snd_soc_pcm_runtime *rtd = substream->private_data;
+	struct snd_soc_dai *cpu_dai = rtd->cpu_dai;
+	struct snd_soc_dai *codec_dai = rtd->codec_dai;
+	int pll_rate;
+	int ret;
+	printk("%s:%d\n",__func__,__LINE__);
+	ret = snd_soc_dai_set_fmt(cpu_dai, SND_SOC_DAIFMT_I2S |
+			SND_SOC_DAIFMT_NB_NF | SND_SOC_DAIFMT_CBS_CFS);
+
+	if (ret)
+	{
+	printk("%s:%d\n",__func__,__LINE__);
+		return ret;
+	}
+	ret = snd_soc_dai_set_fmt(codec_dai, SND_SOC_DAIFMT_I2S |
+			SND_SOC_DAIFMT_NB_NF | SND_SOC_DAIFMT_CBS_CFS);
+	if (ret)
+	{
+	printk("%s:%d\n",__func__,__LINE__);
+		return ret;
+	}
+
+	printk("%s:%d\n",__func__,__LINE__);
+	switch (params_rate(params)) {
+	case 48000:
+	case 8000:
+	case 12000:
+	case 16000:
+	case 24000:
+	case 32000:
+	case 96000:
+		pll_rate = 48000 * 1024;
+		break;
+	case 44100:
+	case 7350:
+	case 11025:
+	case 14700:
+	case 22050:
+	case 29400:
+	case 88200:
+		pll_rate = 44100 * 1024;
+		break;
+	default:
+	printk("%s:%d\n",__func__,__LINE__);
+		return -EINVAL;
+	}
+
+	printk("%s:%d\n",__func__,__LINE__);
+	ret = snd_soc_dai_set_pll(codec_dai, 0,0, 12288000, pll_rate);
+
+	if (ret)
+	{
+	printk("%s:%d\n",__func__,__LINE__);
+		return ret;
+	}
+
+	printk("%s:%d\n",__func__,__LINE__);
+	ret = snd_soc_dai_set_sysclk(codec_dai, 2, pll_rate,
+			SND_SOC_CLOCK_IN);
+
+	if (ret)
+	{
+	printk("%s:%d\n",__func__,__LINE__);
+		return ret;
+	}
+	printk("%s:%d\n",__func__,__LINE__);
+	return ret;
+}
+
+static struct snd_soc_ops imx_hifi_ops = {
+	.hw_params = imx_hifi_hw_params,
+};
+
+SND_SOC_DAILINK_DEFS(hifi,
+        DAILINK_COMP_ARRAY(COMP_EMPTY()),
+        DAILINK_COMP_ARRAY(COMP_CODEC(NULL, "a2b24xx-hifi")),
+        DAILINK_COMP_ARRAY(COMP_EMPTY()));
+
+static struct snd_soc_dai_link imx_ad2428w_dai[] = {
+	{
+		.name = "a2b24xx",
+		.stream_name = "A2B24XX",
+		.ops = &imx_hifi_ops,
+		 SND_SOC_DAILINK_REG(hifi),
+	},
+};
+
+static int imx_ad2428w_probe(struct platform_device *pdev)
+{
+	struct device_node *cpu_np, *codec_np = NULL;
+	struct platform_device *cpu_pdev;
+	struct imx_priv *priv;
+	struct platform_device *codec_pdev = NULL;
+	int ret;
+
+	priv = devm_kzalloc(&pdev->dev, sizeof(*priv), GFP_KERNEL);
+	if (!priv)
+		return -ENOMEM;
+
+	priv->pdev = pdev;
+
+	cpu_np = of_parse_phandle(pdev->dev.of_node, "audio-cpu", 0);
+	if (!cpu_np) {
+		dev_err(&pdev->dev, "cpu dai phandle missing or invalid\n");
+		ret = -EINVAL;
+		goto fail;
+	}
+
+	codec_np = of_parse_phandle(pdev->dev.of_node, "audio-codec", 0);
+	if (!codec_np) {
+		dev_err(&pdev->dev, "phandle missing or invalid\n");
+		ret = -EINVAL;
+		goto fail;
+	}
+
+	cpu_pdev = of_find_device_by_node(cpu_np);
+	if (!cpu_pdev) {
+		dev_err(&pdev->dev, "failed to find SAI platform device\n");
+		ret = -EINVAL;
+		goto fail;
+	}
+
+	priv->card.dai_link = imx_ad2428w_dai;
+
+        imx_ad2428w_dai[0].codecs->of_node = codec_np;
+        imx_ad2428w_dai[0].cpus->dai_name = dev_name(&cpu_pdev->dev);
+        imx_ad2428w_dai[0].platforms->of_node = cpu_np;
+        imx_ad2428w_dai[0].codecs->dai_name = "a2b24xx-hifi";
+        imx_ad2428w_dai[0].codecs->of_node  = codec_np;
+
+	priv->card.num_links = 1;
+	priv->card.dev = &pdev->dev;
+	priv->card.owner = THIS_MODULE;
+	priv->card.fully_routed = true;
+
+	ret = snd_soc_of_parse_card_name(&priv->card, "model");
+	if (ret)
+		goto fail;
+
+	snd_soc_card_set_drvdata(&priv->card, priv);
+
+	ret = devm_snd_soc_register_card(&pdev->dev, &priv->card);
+	if (ret) {
+		dev_err(&pdev->dev, "snd_soc_register_card failed (%d)\n", ret);
+		goto fail;
+	}
+
+	ret = 0;
+fail:
+	if (cpu_np)
+		of_node_put(cpu_np);
+	if (codec_np)
+		of_node_put(codec_np);
+
+	return ret;
+}
+
+static const struct of_device_id imx_ad2428w_dt_ids[] = {
+	{ .compatible = "fsl,imx-ad2428w", },
+	{ /* sentinel */ }
+};
+MODULE_DEVICE_TABLE(of, imx_ad2428w_dt_ids);
+
+static struct platform_driver imx_ad2428w_driver = {
+	.driver = {
+		.name = "a2b-DAI-driver",
+		.pm = &snd_soc_pm_ops,
+		.of_match_table = imx_ad2428w_dt_ids,
+	},
+	.probe = imx_ad2428w_probe,
+};
+module_platform_driver(imx_ad2428w_driver);
+
+MODULE_AUTHOR("Parth Modi");
+MODULE_DESCRIPTION("Freescale i.MX AD2428w ASoC machine driver");
+MODULE_LICENSE("GPL v2");
+MODULE_ALIAS("platform:imx-thor96");
+
--
2.17.1
